{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { withTheme } from \"../config\";\nimport { ScreenWidth, ScreenHeight, isIOS } from \"../helpers\";\nimport Triangle from \"./Triangle\";\nimport getTooltipCoordinate, { getElementVisibleWidth } from \"./getTooltipCoordinate\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tooltip = function (_React$PureComponent) {\n  _inherits(Tooltip, _React$PureComponent);\n  var _super = _createSuper(Tooltip);\n  function Tooltip() {\n    var _this;\n    _classCallCheck(this, Tooltip);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isVisible: false,\n      yOffset: 0,\n      xOffset: 0,\n      elementWidth: 0,\n      elementHeight: 0\n    };\n    _this.toggleTooltip = function () {\n      var onClose = _this.props.onClose;\n      _this.getElementPosition();\n      _this.setState(function (prevState) {\n        if (prevState.isVisible) {\n          onClose && onClose();\n        }\n        return {\n          isVisible: !prevState.isVisible\n        };\n      });\n    };\n    _this.wrapWithPress = function (toggleOnPress, toggleAction, children) {\n      if (toggleOnPress) {\n        return _jsx(TouchableOpacity, _objectSpread(_objectSpread({}, _defineProperty({}, toggleAction, _this.toggleTooltip)), {}, {\n          delayLongPress: 250,\n          activeOpacity: 1,\n          children: children\n        }));\n      }\n      return children;\n    };\n    _this.getTooltipStyle = function () {\n      var _objectSpread2;\n      var _this$state = _this.state,\n        yOffset = _this$state.yOffset,\n        xOffset = _this$state.xOffset,\n        elementHeight = _this$state.elementHeight,\n        elementWidth = _this$state.elementWidth;\n      var _this$props = _this.props,\n        height = _this$props.height,\n        backgroundColor = _this$props.backgroundColor,\n        width = _this$props.width,\n        withPointer = _this$props.withPointer,\n        containerStyle = _this$props.containerStyle;\n      var _getTooltipCoordinate = getTooltipCoordinate(xOffset, yOffset, elementWidth, elementHeight, ScreenWidth, ScreenHeight, width, height, withPointer),\n        x = _getTooltipCoordinate.x,\n        y = _getTooltipCoordinate.y;\n      return _objectSpread((_objectSpread2 = {\n        position: 'absolute'\n      }, _defineProperty(_objectSpread2, I18nManager.isRTL ? 'right' : 'left', x), _defineProperty(_objectSpread2, \"top\", y), _defineProperty(_objectSpread2, \"width\", width), _defineProperty(_objectSpread2, \"height\", height), _defineProperty(_objectSpread2, \"backgroundColor\", backgroundColor), _defineProperty(_objectSpread2, \"display\", 'flex'), _defineProperty(_objectSpread2, \"alignItems\", 'center'), _defineProperty(_objectSpread2, \"justifyContent\", 'center'), _defineProperty(_objectSpread2, \"flex\", 1), _defineProperty(_objectSpread2, \"borderRadius\", 10), _defineProperty(_objectSpread2, \"padding\", 10), _objectSpread2), containerStyle);\n    };\n    _this.renderPointer = function (tooltipY) {\n      var _this$state2 = _this.state,\n        yOffset = _this$state2.yOffset,\n        xOffset = _this$state2.xOffset,\n        elementHeight = _this$state2.elementHeight,\n        elementWidth = _this$state2.elementWidth;\n      var _this$props2 = _this.props,\n        backgroundColor = _this$props2.backgroundColor,\n        pointerColor = _this$props2.pointerColor;\n      var pastMiddleLine = yOffset > tooltipY;\n      return _jsx(View, {\n        style: _defineProperty({\n          position: 'absolute',\n          top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2\n        }, I18nManager.isRTL ? 'right' : 'left', xOffset + getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 - 7.5),\n        children: _jsx(Triangle, {\n          style: {\n            borderBottomColor: pointerColor || backgroundColor\n          },\n          isDown: pastMiddleLine\n        })\n      });\n    };\n    _this.getTooltipHighlightedButtonStyle = function () {\n      var _ref3;\n      var highlightColor = _this.props.highlightColor;\n      var _this$state3 = _this.state,\n        yOffset = _this$state3.yOffset,\n        xOffset = _this$state3.xOffset,\n        elementWidth = _this$state3.elementWidth,\n        elementHeight = _this$state3.elementHeight;\n      return _ref3 = {\n        position: 'absolute',\n        top: yOffset\n      }, _defineProperty(_ref3, I18nManager.isRTL ? 'right' : 'left', xOffset), _defineProperty(_ref3, \"backgroundColor\", highlightColor), _defineProperty(_ref3, \"overflow\", 'visible'), _defineProperty(_ref3, \"width\", elementWidth), _defineProperty(_ref3, \"height\", elementHeight), _ref3;\n    };\n    _this.renderTouchableHighlightedButton = function () {\n      var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();\n      return _jsx(TouchableOpacity, {\n        testID: \"tooltipTouchableHighlightedButton\",\n        onPress: function onPress() {\n          return _this.toggleTooltip();\n        },\n        style: TooltipHighlightedButtonStyle,\n        children: _this.props.children\n      });\n    };\n    _this.renderStaticHighlightedButton = function () {\n      var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();\n      return _jsx(View, {\n        style: TooltipHighlightedButtonStyle,\n        children: _this.props.children\n      });\n    };\n    _this.renderHighlightedButton = function () {\n      var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;\n      if (closeOnlyOnBackdropPress) {\n        return _this.renderTouchableHighlightedButton();\n      } else {\n        return _this.renderStaticHighlightedButton();\n      }\n    };\n    _this.renderContent = function (withTooltip) {\n      var _this$props3 = _this.props,\n        popover = _this$props3.popover,\n        withPointer = _this$props3.withPointer,\n        toggleOnPress = _this$props3.toggleOnPress,\n        toggleAction = _this$props3.toggleAction;\n      if (!withTooltip) {\n        return _this.wrapWithPress(toggleOnPress, toggleAction, _this.props.children);\n      }\n      var tooltipStyle = _this.getTooltipStyle();\n      return _jsxs(View, {\n        children: [_this.renderHighlightedButton(), withPointer && _this.renderPointer(tooltipStyle.top), _jsx(View, {\n          style: tooltipStyle,\n          testID: \"tooltipPopoverContainer\",\n          children: popover\n        })]\n      });\n    };\n    _this.getElementPosition = function () {\n      var skipAndroidStatusBar = _this.props.skipAndroidStatusBar;\n      _this.renderedElement && _this.renderedElement.measure(function (frameOffsetX, frameOffsetY, width, height, pageOffsetX, pageOffsetY) {\n        _this.setState({\n          xOffset: pageOffsetX,\n          yOffset: isIOS || skipAndroidStatusBar ? pageOffsetY : pageOffsetY - StatusBar.currentHeight,\n          elementWidth: width,\n          elementHeight: height\n        });\n      });\n    };\n    _this.renderStaticModalContent = function () {\n      var _this$props4 = _this.props,\n        withOverlay = _this$props4.withOverlay,\n        overlayColor = _this$props4.overlayColor;\n      return _jsxs(Fragment, {\n        children: [_jsx(TouchableOpacity, {\n          style: styles.container(withOverlay, overlayColor),\n          onPress: _this.toggleTooltip,\n          activeOpacity: 1\n        }), _jsx(View, {\n          style: styles.closeOnlyOnBackdropPressViewWrapper,\n          children: _this.renderContent(true)\n        })]\n      });\n    };\n    _this.renderTogglingModalContent = function () {\n      var _this$props5 = _this.props,\n        withOverlay = _this$props5.withOverlay,\n        overlayColor = _this$props5.overlayColor;\n      return _jsx(TouchableOpacity, {\n        style: styles.container(withOverlay, overlayColor),\n        onPress: _this.toggleTooltip,\n        activeOpacity: 1,\n        children: _this.renderContent(true)\n      });\n    };\n    _this.renderModalContent = function () {\n      var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;\n      if (closeOnlyOnBackdropPress) {\n        return _this.renderStaticModalContent();\n      } else {\n        return _this.renderTogglingModalContent();\n      }\n    };\n    return _this;\n  }\n  _createClass(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      requestAnimationFrame(this.getElementPosition);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var isVisible = this.state.isVisible;\n      var _this$props6 = this.props,\n        onClose = _this$props6.onClose,\n        onOpen = _this$props6.onOpen,\n        ModalComponent = _this$props6.ModalComponent;\n      return _jsxs(View, {\n        collapsable: false,\n        ref: function ref(e) {\n          _this2.renderedElement = e;\n        },\n        children: [this.renderContent(false), _jsx(ModalComponent, {\n          animationType: \"fade\",\n          visible: isVisible,\n          transparent: true,\n          onDismiss: onClose,\n          onShow: onOpen,\n          onRequestClose: onClose,\n          children: this.renderModalContent()\n        })]\n      });\n    }\n  }]);\n  return Tooltip;\n}(React.PureComponent);\nTooltip.propTypes = {\n  children: PropTypes.element,\n  withPointer: PropTypes.bool,\n  popover: PropTypes.element,\n  toggleOnPress: PropTypes.bool,\n  toggleAction: PropTypes.oneOf(['onPress', 'onLongPress']),\n  height: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  pointerColor: PropTypes.string,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  overlayColor: PropTypes.string,\n  withOverlay: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  highlightColor: PropTypes.string,\n  skipAndroidStatusBar: PropTypes.bool,\n  ModalComponent: PropTypes.elementType,\n  closeOnlyOnBackdropPress: PropTypes.bool\n};\nTooltip.defaultProps = {\n  withOverlay: true,\n  overlayColor: 'rgba(250, 250, 250, 0.70)',\n  highlightColor: 'transparent',\n  withPointer: true,\n  toggleOnPress: true,\n  toggleAction: 'onPress',\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  backgroundColor: '#617080',\n  onClose: function onClose() {},\n  onOpen: function onOpen() {},\n  skipAndroidStatusBar: false,\n  ModalComponent: Modal,\n  closeOnlyOnBackdropPress: false\n};\nvar styles = {\n  container: function container(withOverlay, overlayColor) {\n    return {\n      backgroundColor: withOverlay ? overlayColor : 'transparent',\n      flex: 1\n    };\n  },\n  closeOnlyOnBackdropPressViewWrapper: {\n    position: 'absolute'\n  }\n};\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');","map":{"version":3,"names":["React","Fragment","PropTypes","TouchableOpacity","Modal","View","StatusBar","I18nManager","withTheme","ScreenWidth","ScreenHeight","isIOS","Triangle","getTooltipCoordinate","getElementVisibleWidth","jsx","_jsx","jsxs","_jsxs","Tooltip","_React$PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","isVisible","yOffset","xOffset","elementWidth","elementHeight","toggleTooltip","onClose","props","getElementPosition","setState","prevState","wrapWithPress","toggleOnPress","toggleAction","children","_objectSpread","_defineProperty","delayLongPress","activeOpacity","getTooltipStyle","_objectSpread2","_this$state","_this$props","height","backgroundColor","width","withPointer","containerStyle","_getTooltipCoordinate","x","y","position","isRTL","renderPointer","tooltipY","_this$state2","_this$props2","pointerColor","pastMiddleLine","style","top","borderBottomColor","isDown","getTooltipHighlightedButtonStyle","_ref3","highlightColor","_this$state3","renderTouchableHighlightedButton","TooltipHighlightedButtonStyle","testID","onPress","renderStaticHighlightedButton","renderHighlightedButton","closeOnlyOnBackdropPress","renderContent","withTooltip","_this$props3","popover","tooltipStyle","skipAndroidStatusBar","renderedElement","measure","frameOffsetX","frameOffsetY","pageOffsetX","pageOffsetY","currentHeight","renderStaticModalContent","_this$props4","withOverlay","overlayColor","styles","container","closeOnlyOnBackdropPressViewWrapper","renderTogglingModalContent","_this$props5","renderModalContent","_createClass","key","value","componentDidMount","requestAnimationFrame","render","_this2","_this$props6","onOpen","ModalComponent","collapsable","ref","e","animationType","visible","transparent","onDismiss","onShow","onRequestClose","PureComponent","propTypes","element","bool","oneOf","number","oneOfType","string","object","array","func","elementType","defaultProps","flex"],"sources":["C:/Users/luizf/OneDrive/Área de Trabalho/App_Cuidadores/node_modules/react-native-elements/src/tooltip/Tooltip.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableOpacity,\n  Modal,\n  View,\n  StatusBar,\n  I18nManager,\n} from 'react-native';\n\nimport { withTheme } from '../config';\nimport { ScreenWidth, ScreenHeight, isIOS } from '../helpers';\n\nimport Triangle from './Triangle';\nimport getTooltipCoordinate, {\n  getElementVisibleWidth,\n} from './getTooltipCoordinate';\n\nclass Tooltip extends React.PureComponent {\n  state = {\n    isVisible: false,\n    yOffset: 0,\n    xOffset: 0,\n    elementWidth: 0,\n    elementHeight: 0,\n  };\n\n  renderedElement;\n\n  toggleTooltip = () => {\n    const { onClose } = this.props;\n    this.getElementPosition();\n    this.setState((prevState) => {\n      if (prevState.isVisible) {\n        onClose && onClose();\n      }\n\n      return { isVisible: !prevState.isVisible };\n    });\n  };\n\n  wrapWithPress = (toggleOnPress, toggleAction, children) => {\n    if (toggleOnPress) {\n      return (\n        <TouchableOpacity\n          {...{ [toggleAction]: this.toggleTooltip }}\n          delayLongPress={250}\n          activeOpacity={1}\n        >\n          {children}\n        </TouchableOpacity>\n      );\n    }\n\n    return children;\n  };\n\n  getTooltipStyle = () => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const {\n      height,\n      backgroundColor,\n      width,\n      withPointer,\n      containerStyle,\n    } = this.props;\n\n    const { x, y } = getTooltipCoordinate(\n      xOffset,\n      yOffset,\n      elementWidth,\n      elementHeight,\n      ScreenWidth,\n      ScreenHeight,\n      width,\n      height,\n      withPointer\n    );\n\n    return {\n      position: 'absolute',\n      [I18nManager.isRTL ? 'right' : 'left']: x,\n      top: y,\n      width,\n      height,\n      backgroundColor,\n      // default styles\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 1,\n      borderRadius: 10,\n      padding: 10,\n      ...containerStyle,\n    };\n  };\n\n  renderPointer = (tooltipY) => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const { backgroundColor, pointerColor } = this.props;\n    const pastMiddleLine = yOffset > tooltipY;\n\n    return (\n      <View\n        style={{\n          position: 'absolute',\n          top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n          [I18nManager.isRTL ? 'right' : 'left']:\n            xOffset +\n            getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 -\n            7.5,\n        }}\n      >\n        <Triangle\n          style={{ borderBottomColor: pointerColor || backgroundColor }}\n          isDown={pastMiddleLine}\n        />\n      </View>\n    );\n  };\n  getTooltipHighlightedButtonStyle = () => {\n    const { highlightColor } = this.props;\n    const { yOffset, xOffset, elementWidth, elementHeight } = this.state;\n    return {\n      position: 'absolute',\n      top: yOffset,\n      [I18nManager.isRTL ? 'right' : 'left']: xOffset,\n      backgroundColor: highlightColor,\n      overflow: 'visible',\n      width: elementWidth,\n      height: elementHeight,\n    };\n  };\n  renderTouchableHighlightedButton = () => {\n    const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n    return (\n      <TouchableOpacity\n        testID=\"tooltipTouchableHighlightedButton\"\n        onPress={() => this.toggleTooltip()}\n        style={TooltipHighlightedButtonStyle}\n      >\n        {this.props.children}\n      </TouchableOpacity>\n    );\n  };\n  renderStaticHighlightedButton = () => {\n    const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n    return (\n      <View style={TooltipHighlightedButtonStyle}>{this.props.children}</View>\n    );\n  };\n\n  renderHighlightedButton = () => {\n    const { closeOnlyOnBackdropPress } = this.props;\n    if (closeOnlyOnBackdropPress) {\n      return this.renderTouchableHighlightedButton();\n    } else {\n      return this.renderStaticHighlightedButton();\n    }\n  };\n\n  renderContent = (withTooltip) => {\n    const { popover, withPointer, toggleOnPress, toggleAction } = this.props;\n\n    if (!withTooltip) {\n      return this.wrapWithPress(\n        toggleOnPress,\n        toggleAction,\n        this.props.children\n      );\n    }\n\n    const tooltipStyle = this.getTooltipStyle();\n    return (\n      <View>\n        {this.renderHighlightedButton()}\n        {withPointer && this.renderPointer(tooltipStyle.top)}\n        <View style={tooltipStyle} testID=\"tooltipPopoverContainer\">\n          {popover}\n        </View>\n      </View>\n    );\n  };\n\n  componentDidMount() {\n    // wait to compute onLayout values.\n    requestAnimationFrame(this.getElementPosition);\n  }\n\n  getElementPosition = () => {\n    const { skipAndroidStatusBar } = this.props;\n    this.renderedElement &&\n      this.renderedElement.measure(\n        (\n          frameOffsetX,\n          frameOffsetY,\n          width,\n          height,\n          pageOffsetX,\n          pageOffsetY\n        ) => {\n          this.setState({\n            xOffset: pageOffsetX,\n            yOffset:\n              isIOS || skipAndroidStatusBar\n                ? pageOffsetY\n                : pageOffsetY - StatusBar.currentHeight,\n            elementWidth: width,\n            elementHeight: height,\n          });\n        }\n      );\n  };\n\n  renderStaticModalContent = () => {\n    const { withOverlay, overlayColor } = this.props;\n\n    return (\n      <Fragment>\n        <TouchableOpacity\n          style={styles.container(withOverlay, overlayColor)}\n          onPress={this.toggleTooltip}\n          activeOpacity={1}\n        />\n        <View style={styles.closeOnlyOnBackdropPressViewWrapper}>\n          {this.renderContent(true)}\n        </View>\n      </Fragment>\n    );\n  };\n  renderTogglingModalContent = () => {\n    const { withOverlay, overlayColor } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={styles.container(withOverlay, overlayColor)}\n        onPress={this.toggleTooltip}\n        activeOpacity={1}\n      >\n        {this.renderContent(true)}\n      </TouchableOpacity>\n    );\n  };\n\n  renderModalContent = () => {\n    const { closeOnlyOnBackdropPress } = this.props;\n    if (closeOnlyOnBackdropPress) {\n      return this.renderStaticModalContent();\n    } else {\n      return this.renderTogglingModalContent();\n    }\n  };\n\n  render() {\n    const { isVisible } = this.state;\n    const { onClose, onOpen, ModalComponent } = this.props;\n\n    return (\n      <View\n        collapsable={false}\n        ref={(e) => {\n          this.renderedElement = e;\n        }}\n      >\n        {this.renderContent(false)}\n        <ModalComponent\n          animationType=\"fade\"\n          visible={isVisible}\n          transparent\n          onDismiss={onClose}\n          onShow={onOpen}\n          onRequestClose={onClose}\n        >\n          {this.renderModalContent()}\n        </ModalComponent>\n      </View>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  children: PropTypes.element,\n  withPointer: PropTypes.bool,\n  popover: PropTypes.element,\n  toggleOnPress: PropTypes.bool,\n  toggleAction: PropTypes.oneOf(['onPress', 'onLongPress']),\n  height: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  pointerColor: PropTypes.string,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  overlayColor: PropTypes.string,\n  withOverlay: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  highlightColor: PropTypes.string,\n  skipAndroidStatusBar: PropTypes.bool,\n  ModalComponent: PropTypes.elementType,\n  closeOnlyOnBackdropPress: PropTypes.bool,\n};\n\nTooltip.defaultProps = {\n  withOverlay: true,\n  overlayColor: 'rgba(250, 250, 250, 0.70)',\n  highlightColor: 'transparent',\n  withPointer: true,\n  toggleOnPress: true,\n  toggleAction: 'onPress',\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  backgroundColor: '#617080',\n  onClose: () => {},\n  onOpen: () => {},\n  skipAndroidStatusBar: false,\n  ModalComponent: Modal,\n  closeOnlyOnBackdropPress: false,\n};\n\nconst styles = {\n  container: (withOverlay, overlayColor) => ({\n    backgroundColor: withOverlay ? overlayColor : 'transparent',\n    flex: 1,\n  }),\n  closeOnlyOnBackdropPressViewWrapper: {\n    position: 'absolute',\n  },\n};\n\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}