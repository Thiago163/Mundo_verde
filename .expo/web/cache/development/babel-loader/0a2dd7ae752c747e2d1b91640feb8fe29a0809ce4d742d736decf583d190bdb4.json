{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { Ubuntu_700Bold, useFonts } from '@expo-google-fonts/ubuntu';\nimport { Roboto_400Regular, Roboto_500Medium } from '@expo-google-fonts/roboto';\nimport AppLoading from 'expo-app-loading';\nimport React from 'react';\nimport Routes from \"./src/routes\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useFonts = useFonts({\n      Roboto_400Regular: Roboto_400Regular,\n      Roboto_500Medium: Roboto_500Medium,\n      Ubuntu_700Bold: Ubuntu_700Bold\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  } else {\n    return _jsxs(_Fragment, {\n      children: [_jsx(StatusBar, {\n        style: \"dark\",\n        backgroundColor: \"transparent\",\n        translucent: true\n      }), _jsx(Routes, {})]\n    });\n  }\n}","map":{"version":3,"names":["StatusBar","Ubuntu_700Bold","useFonts","Roboto_400Regular","Roboto_500Medium","AppLoading","React","Routes","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","_useFonts","_useFonts2","_slicedToArray","fontsLoaded","children","style","backgroundColor","translucent"],"sources":["D:/home/aluno/Desktop/App_Cuidadores10/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { Ubuntu_700Bold, useFonts } from '@expo-google-fonts/ubuntu';\nimport { Roboto_400Regular, Roboto_500Medium } from '@expo-google-fonts/roboto';\n\nimport AppLoading from 'expo-app-loading';\nimport React from 'react';\nimport Routes from './src/routes';\n\nexport default function App() {\n        const [fontsLoaded] = useFonts({\n            Roboto_400Regular,\n            Roboto_500Medium,\n            Ubuntu_700Bold\n        });\n\n        if (!fontsLoaded) {\n            return <AppLoading/>\n        }\n\n        else {\n            return (\n                <>\n                    <StatusBar style=\"dark\" backgroundColor=\"transparent\" translucent />\n                    <Routes/>\n                </>\n            );\n        }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,cAAc,EAAEC,QAAQ,QAAQ,2BAA2B;AACpE,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,2BAA2B;AAE/E,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElC,eAAe,SAASC,GAAGA,CAAA,EAAG;EACtB,IAAAC,SAAA,GAAsBb,QAAQ,CAAC;MAC3BC,iBAAiB,EAAjBA,iBAAiB;MACjBC,gBAAgB,EAAhBA,gBAAgB;MAChBH,cAAc,EAAdA;IACJ,CAAC,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAJKG,WAAW,GAAAF,UAAA;EAMlB,IAAI,CAACE,WAAW,EAAE;IACd,OAAOT,IAAA,CAACJ,UAAU,KAAE;EACxB,CAAC,MAEI;IACD,OACIQ,KAAA,CAAAF,SAAA;MAAAQ,QAAA,GACIV,IAAA,CAACT,SAAS;QAACoB,KAAK,EAAC,MAAM;QAACC,eAAe,EAAC,aAAa;QAACC,WAAW;MAAA,EAAG,EACpEb,IAAA,CAACF,MAAM,KAAE;IAAA,EACV;EAEX;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}