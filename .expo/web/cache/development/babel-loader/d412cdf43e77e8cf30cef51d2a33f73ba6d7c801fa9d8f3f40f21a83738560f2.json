{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"theme\"],\n  _excluded2 = [\"Component\", \"checked\", \"iconRight\", \"title\", \"titleProps\", \"center\", \"right\", \"containerStyle\", \"textStyle\", \"wrapperStyle\", \"onPress\", \"onLongPress\", \"checkedTitle\", \"fontFamily\", \"checkedColor\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextElement from \"../text/Text\";\nimport CheckBoxIcon from \"./CheckBoxIcon\";\nimport { fonts, withTheme } from \"../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CheckBox = function CheckBox(props) {\n  var theme = props.theme,\n    rest = _objectWithoutProperties(props, _excluded);\n  var Component = rest.Component,\n    checked = rest.checked,\n    iconRight = rest.iconRight,\n    title = rest.title,\n    titleProps = rest.titleProps,\n    center = rest.center,\n    right = rest.right,\n    containerStyle = rest.containerStyle,\n    textStyle = rest.textStyle,\n    wrapperStyle = rest.wrapperStyle,\n    onPress = rest.onPress,\n    onLongPress = rest.onLongPress,\n    checkedTitle = rest.checkedTitle,\n    fontFamily = rest.fontFamily,\n    _rest$checkedColor = rest.checkedColor,\n    checkedColor = _rest$checkedColor === void 0 ? theme.colors.primary : _rest$checkedColor,\n    attributes = _objectWithoutProperties(rest, _excluded2);\n  var accessibilityState = {\n    checked: !!checked\n  };\n  return _jsx(Component, _objectSpread(_objectSpread({\n    accessibilityRole: \"checkbox\",\n    accessibilityState: accessibilityState,\n    testID: \"checkbox\"\n  }, attributes), {}, {\n    onLongPress: onLongPress,\n    onPress: onPress,\n    style: StyleSheet.flatten([styles.container, title && styles.containerHasTitle, containerStyle && containerStyle]),\n    children: _jsxs(View, {\n      style: StyleSheet.flatten([styles.wrapper, right && {\n        justifyContent: 'flex-end'\n      }, center && {\n        justifyContent: 'center'\n      }, wrapperStyle && wrapperStyle]),\n      children: [!iconRight && _jsx(CheckBoxIcon, _objectSpread(_objectSpread({}, props), {}, {\n        checkedColor: checkedColor\n      })), React.isValidElement(title) ? title : title !== '' && title && _jsx(TextElement, _objectSpread(_objectSpread({\n        testID: \"checkboxTitle\",\n        style: StyleSheet.flatten([styles.text(theme), textStyle && textStyle, fontFamily && {\n          fontFamily: fontFamily\n        }])\n      }, titleProps), {}, {\n        children: checked ? checkedTitle || title : title\n      })), iconRight && _jsx(CheckBoxIcon, _objectSpread(_objectSpread({}, props), {}, {\n        checkedColor: checkedColor\n      }))]\n    })\n  }));\n};\nCheckBox.propTypes = _objectSpread(_objectSpread({}, CheckBoxIcon.propTypes), {}, {\n  Component: PropTypes.elementType,\n  iconRight: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  titleProps: PropTypes.object,\n  center: PropTypes.bool,\n  right: PropTypes.bool,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  wrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  checkedTitle: PropTypes.string,\n  fontFamily: PropTypes.string\n});\nCheckBox.defaultProps = {\n  checked: false,\n  iconRight: false,\n  right: false,\n  center: false,\n  uncheckedColor: '#bfbfbf',\n  checkedIcon: 'check-square-o',\n  uncheckedIcon: 'square-o',\n  size: 24,\n  Component: TouchableOpacity,\n  titleProps: {}\n};\nvar styles = {\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  container: {\n    margin: 5,\n    marginLeft: 10,\n    marginRight: 10,\n    padding: 10\n  },\n  containerHasTitle: {\n    borderWidth: 1,\n    borderRadius: 3,\n    backgroundColor: '#fafafa',\n    borderColor: '#ededed'\n  },\n  text: function text(theme) {\n    return _objectSpread({\n      marginLeft: 10,\n      marginRight: 10,\n      color: theme.colors.grey1\n    }, Platform.select({\n      android: _objectSpread({}, fonts.android.bold),\n      default: {\n        fontWeight: 'bold'\n      }\n    }));\n  }\n};\nexport { CheckBox };\nexport default withTheme(CheckBox, 'CheckBox');","map":{"version":3,"names":["React","PropTypes","StyleSheet","TouchableOpacity","View","Platform","TextElement","CheckBoxIcon","fonts","withTheme","jsx","_jsx","jsxs","_jsxs","CheckBox","props","theme","rest","_objectWithoutProperties","_excluded","Component","checked","iconRight","title","titleProps","center","right","containerStyle","textStyle","wrapperStyle","onPress","onLongPress","checkedTitle","fontFamily","_rest$checkedColor","checkedColor","colors","primary","attributes","_excluded2","accessibilityState","_objectSpread","accessibilityRole","testID","style","flatten","styles","container","containerHasTitle","children","wrapper","justifyContent","isValidElement","text","propTypes","elementType","bool","oneOfType","string","element","object","array","func","defaultProps","uncheckedColor","checkedIcon","uncheckedIcon","size","flexDirection","alignItems","margin","marginLeft","marginRight","padding","borderWidth","borderRadius","backgroundColor","borderColor","color","grey1","select","android","bold","default","fontWeight"],"sources":["D:/home/aluno/Desktop/App_Cuidadores/node_modules/react-native-elements/src/checkbox/CheckBox.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, TouchableOpacity, View, Platform } from 'react-native';\n\nimport TextElement from '../text/Text';\nimport CheckBoxIcon from './CheckBoxIcon';\nimport { fonts, withTheme } from '../config';\n\nconst CheckBox = (props) => {\n  const { theme, ...rest } = props;\n\n  const {\n    Component,\n    checked,\n    iconRight,\n    title,\n    titleProps,\n    center,\n    right,\n    containerStyle,\n    textStyle,\n    wrapperStyle,\n    onPress,\n    onLongPress,\n    checkedTitle,\n    fontFamily,\n    checkedColor = theme.colors.primary,\n    ...attributes\n  } = rest;\n\n  const accessibilityState = {\n    checked: !!checked,\n  };\n\n  return (\n    <Component\n      accessibilityRole=\"checkbox\"\n      accessibilityState={accessibilityState}\n      testID=\"checkbox\"\n      {...attributes}\n      onLongPress={onLongPress}\n      onPress={onPress}\n      style={StyleSheet.flatten([\n        styles.container,\n        title && styles.containerHasTitle,\n        containerStyle && containerStyle,\n      ])}\n    >\n      <View\n        style={StyleSheet.flatten([\n          styles.wrapper,\n          right && { justifyContent: 'flex-end' },\n          center && { justifyContent: 'center' },\n          wrapperStyle && wrapperStyle,\n        ])}\n      >\n        {!iconRight && <CheckBoxIcon {...props} checkedColor={checkedColor} />}\n\n        {React.isValidElement(title)\n          ? title\n          : title !== '' &&\n            title && (\n              <TextElement\n                testID=\"checkboxTitle\"\n                style={StyleSheet.flatten([\n                  styles.text(theme),\n                  textStyle && textStyle,\n                  fontFamily && { fontFamily },\n                ])}\n                {...titleProps}\n              >\n                {checked ? checkedTitle || title : title}\n              </TextElement>\n            )}\n\n        {iconRight && <CheckBoxIcon {...props} checkedColor={checkedColor} />}\n      </View>\n    </Component>\n  );\n};\nCheckBox.propTypes = {\n  ...CheckBoxIcon.propTypes,\n  Component: PropTypes.elementType,\n  iconRight: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  titleProps: PropTypes.object,\n  center: PropTypes.bool,\n  right: PropTypes.bool,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  wrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  checkedTitle: PropTypes.string,\n  fontFamily: PropTypes.string,\n};\n\nCheckBox.defaultProps = {\n  checked: false,\n  iconRight: false,\n  right: false,\n  center: false,\n  uncheckedColor: '#bfbfbf',\n  checkedIcon: 'check-square-o',\n  uncheckedIcon: 'square-o',\n  size: 24,\n  Component: TouchableOpacity,\n  titleProps: {},\n};\n\nconst styles = {\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  container: {\n    margin: 5,\n    marginLeft: 10,\n    marginRight: 10,\n    padding: 10,\n  },\n  containerHasTitle: {\n    borderWidth: 1,\n    borderRadius: 3,\n    backgroundColor: '#fafafa',\n    borderColor: '#ededed',\n  },\n  text: (theme) => ({\n    marginLeft: 10,\n    marginRight: 10,\n    color: theme.colors.grey1,\n    ...Platform.select({\n      android: {\n        ...fonts.android.bold,\n      },\n      default: {\n        fontWeight: 'bold',\n      },\n    }),\n  }),\n};\n\nexport { CheckBox };\nexport default withTheme(CheckBox, 'CheckBox');\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAGnC,OAAOC,WAAW;AAClB,OAAOC,YAAY;AACnB,SAASC,KAAK,EAAEC,SAAS;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,KAAK,EAAK;EAC1B,IAAQC,KAAK,GAAcD,KAAK,CAAxBC,KAAK;IAAKC,IAAI,GAAAC,wBAAA,CAAKH,KAAK,EAAAI,SAAA;EAEhC,IACEC,SAAS,GAgBPH,IAAI,CAhBNG,SAAS;IACTC,OAAO,GAeLJ,IAAI,CAfNI,OAAO;IACPC,SAAS,GAcPL,IAAI,CAdNK,SAAS;IACTC,KAAK,GAaHN,IAAI,CAbNM,KAAK;IACLC,UAAU,GAYRP,IAAI,CAZNO,UAAU;IACVC,MAAM,GAWJR,IAAI,CAXNQ,MAAM;IACNC,KAAK,GAUHT,IAAI,CAVNS,KAAK;IACLC,cAAc,GASZV,IAAI,CATNU,cAAc;IACdC,SAAS,GAQPX,IAAI,CARNW,SAAS;IACTC,YAAY,GAOVZ,IAAI,CAPNY,YAAY;IACZC,OAAO,GAMLb,IAAI,CANNa,OAAO;IACPC,WAAW,GAKTd,IAAI,CALNc,WAAW;IACXC,YAAY,GAIVf,IAAI,CAJNe,YAAY;IACZC,UAAU,GAGRhB,IAAI,CAHNgB,UAAU;IAAAC,kBAAA,GAGRjB,IAAI,CAFNkB,YAAY;IAAZA,YAAY,GAAAD,kBAAA,cAAGlB,KAAK,CAACoB,MAAM,CAACC,OAAO,GAAAH,kBAAA;IAChCI,UAAU,GAAApB,wBAAA,CACXD,IAAI,EAAAsB,UAAA;EAER,IAAMC,kBAAkB,GAAG;IACzBnB,OAAO,EAAE,CAAC,CAACA;EACb,CAAC;EAED,OACEV,IAAA,CAACS,SAAS,EAAAqB,aAAA,CAAAA,aAAA;IACRC,iBAAiB,EAAC,UAAU;IAC5BF,kBAAkB,EAAEA,kBAAmB;IACvCG,MAAM,EAAC;EAAU,GACbL,UAAU;IACdP,WAAW,EAAEA,WAAY;IACzBD,OAAO,EAAEA,OAAQ;IACjBc,KAAK,EAAE1C,UAAU,CAAC2C,OAAO,CAAC,CACxBC,MAAM,CAACC,SAAS,EAChBxB,KAAK,IAAIuB,MAAM,CAACE,iBAAiB,EACjCrB,cAAc,IAAIA,cAAc,CACjC,CAAE;IAAAsB,QAAA,EAEHpC,KAAA,CAACT,IAAI;MACHwC,KAAK,EAAE1C,UAAU,CAAC2C,OAAO,CAAC,CACxBC,MAAM,CAACI,OAAO,EACdxB,KAAK,IAAI;QAAEyB,cAAc,EAAE;MAAW,CAAC,EACvC1B,MAAM,IAAI;QAAE0B,cAAc,EAAE;MAAS,CAAC,EACtCtB,YAAY,IAAIA,YAAY,CAC7B,CAAE;MAAAoB,QAAA,GAEF,CAAC3B,SAAS,IAAIX,IAAA,CAACJ,YAAY,EAAAkC,aAAA,CAAAA,aAAA,KAAK1B,KAAK;QAAEoB,YAAY,EAAEA;MAAa,GAAG,EAErEnC,KAAK,CAACoD,cAAc,CAAC7B,KAAK,CAAC,GACxBA,KAAK,GACLA,KAAK,KAAK,EAAE,IACZA,KAAK,IACHZ,IAAA,CAACL,WAAW,EAAAmC,aAAA,CAAAA,aAAA;QACVE,MAAM,EAAC,eAAe;QACtBC,KAAK,EAAE1C,UAAU,CAAC2C,OAAO,CAAC,CACxBC,MAAM,CAACO,IAAI,CAACrC,KAAK,CAAC,EAClBY,SAAS,IAAIA,SAAS,EACtBK,UAAU,IAAI;UAAEA,UAAU,EAAVA;QAAW,CAAC,CAC7B;MAAE,GACCT,UAAU;QAAAyB,QAAA,EAEb5B,OAAO,GAAGW,YAAY,IAAIT,KAAK,GAAGA;MAAK,GAE3C,EAEJD,SAAS,IAAIX,IAAA,CAACJ,YAAY,EAAAkC,aAAA,CAAAA,aAAA,KAAK1B,KAAK;QAAEoB,YAAY,EAAEA;MAAa,GAAG;IAAA;EAChE,GACG;AAEhB,CAAC;AACDrB,QAAQ,CAACwC,SAAS,GAAAb,aAAA,CAAAA,aAAA,KACblC,YAAY,CAAC+C,SAAS;EACzBlC,SAAS,EAAEnB,SAAS,CAACsD,WAAW;EAChCjC,SAAS,EAAErB,SAAS,CAACuD,IAAI;EACzBjC,KAAK,EAAEtB,SAAS,CAACwD,SAAS,CAAC,CAACxD,SAAS,CAACyD,MAAM,EAAEzD,SAAS,CAAC0D,OAAO,CAAC,CAAC;EACjEnC,UAAU,EAAEvB,SAAS,CAAC2D,MAAM;EAC5BnC,MAAM,EAAExB,SAAS,CAACuD,IAAI;EACtB9B,KAAK,EAAEzB,SAAS,CAACuD,IAAI;EACrB7B,cAAc,EAAE1B,SAAS,CAACwD,SAAS,CAAC,CAACxD,SAAS,CAAC2D,MAAM,EAAE3D,SAAS,CAAC4D,KAAK,CAAC,CAAC;EACxEhC,YAAY,EAAE5B,SAAS,CAACwD,SAAS,CAAC,CAACxD,SAAS,CAAC2D,MAAM,EAAE3D,SAAS,CAAC4D,KAAK,CAAC,CAAC;EACtEjC,SAAS,EAAE3B,SAAS,CAACwD,SAAS,CAAC,CAACxD,SAAS,CAAC2D,MAAM,EAAE3D,SAAS,CAAC4D,KAAK,CAAC,CAAC;EACnE/B,OAAO,EAAE7B,SAAS,CAAC6D,IAAI;EACvB/B,WAAW,EAAE9B,SAAS,CAAC6D,IAAI;EAC3B9B,YAAY,EAAE/B,SAAS,CAACyD,MAAM;EAC9BzB,UAAU,EAAEhC,SAAS,CAACyD;AAAM,EAC7B;AAED5C,QAAQ,CAACiD,YAAY,GAAG;EACtB1C,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBI,KAAK,EAAE,KAAK;EACZD,MAAM,EAAE,KAAK;EACbuC,cAAc,EAAE,SAAS;EACzBC,WAAW,EAAE,gBAAgB;EAC7BC,aAAa,EAAE,UAAU;EACzBC,IAAI,EAAE,EAAE;EACR/C,SAAS,EAAEjB,gBAAgB;EAC3BqB,UAAU,EAAE,CAAC;AACf,CAAC;AAED,IAAMsB,MAAM,GAAG;EACbI,OAAO,EAAE;IACPkB,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EACDtB,SAAS,EAAE;IACTuB,MAAM,EAAE,CAAC;IACTC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE;EACX,CAAC;EACDzB,iBAAiB,EAAE;IACjB0B,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,CAAC;IACfC,eAAe,EAAE,SAAS;IAC1BC,WAAW,EAAE;EACf,CAAC;EACDxB,IAAI,EAAE,SAAAA,KAACrC,KAAK;IAAA,OAAAyB,aAAA;MACV8B,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,EAAE;MACfM,KAAK,EAAE9D,KAAK,CAACoB,MAAM,CAAC2C;IAAK,GACtB1E,QAAQ,CAAC2E,MAAM,CAAC;MACjBC,OAAO,EAAAxC,aAAA,KACFjC,KAAK,CAACyE,OAAO,CAACC,IAAI,CACtB;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE;MACd;IACF,CAAC,CAAC;EAAA;AAEN,CAAC;AAED,SAAStE,QAAQ;AACjB,eAAeL,SAAS,CAACK,QAAQ,EAAE,UAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}