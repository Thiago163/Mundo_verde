{"ast":null,"code":"import { defineAnimation } from \"./util\";\nexport function withSequence() {\n  'worklet';\n\n  for (var _len = arguments.length, _animations = new Array(_len), _key = 0; _key < _len; _key++) {\n    _animations[_key] = arguments[_key];\n  }\n  return defineAnimation(_animations[0], function () {\n    'worklet';\n\n    var animations = _animations.map(function (a) {\n      var result = typeof a === 'function' ? a() : a;\n      result.finished = false;\n      return result;\n    });\n    var firstAnimation = animations[0];\n    var callback = function callback(finished) {\n      if (finished) {\n        return;\n      }\n      animations.forEach(function (animation) {\n        if (typeof animation.callback === 'function' && !animation.finished) {\n          animation.callback(finished);\n        }\n      });\n    };\n    function sequence(animation, now) {\n      var currentAnim = animations[animation.animationIndex];\n      var finished = currentAnim.onFrame(currentAnim, now);\n      animation.current = currentAnim.current;\n      if (finished) {\n        if (currentAnim.callback) {\n          currentAnim.callback(true);\n        }\n        currentAnim.finished = true;\n        animation.animationIndex += 1;\n        if (animation.animationIndex < animations.length) {\n          var nextAnim = animations[animation.animationIndex];\n          nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n          return false;\n        }\n        return true;\n      }\n      return false;\n    }\n    function onStart(animation, value, now, previousAnimation) {\n      animation.animationIndex = 0;\n      if (previousAnimation === undefined) {\n        previousAnimation = animations[animations.length - 1];\n      }\n      firstAnimation.onStart(firstAnimation, value, now, previousAnimation);\n    }\n    return {\n      isHigherOrder: true,\n      onFrame: sequence,\n      onStart: onStart,\n      animationIndex: 0,\n      current: firstAnimation.current,\n      callback: callback\n    };\n  });\n}\nexport function sequence() {\n  'worklet';\n\n  console.warn('Method `sequence` is deprecated. Please use `withSequence` instead');\n  return withSequence.apply(void 0, arguments);\n}","map":{"version":3,"names":["defineAnimation","withSequence","_len","arguments","length","_animations","Array","_key","animations","map","a","result","finished","firstAnimation","callback","forEach","animation","sequence","now","currentAnim","animationIndex","onFrame","current","nextAnim","onStart","value","previousAnimation","undefined","isHigherOrder","console","warn","apply"],"sources":["D:/home/aluno/Desktop/AppCruidadores - Copia/App_Cuidadores-main/node_modules/react-native-reanimated/lib/reanimated2/animation/sequence.js"],"sourcesContent":["import { defineAnimation } from './util';\nexport function withSequence(..._animations) {\n    'worklet';\n    return defineAnimation(_animations[0], () => {\n        'worklet';\n        const animations = _animations.map((a) => {\n            const result = typeof a === 'function' ? a() : a;\n            result.finished = false;\n            return result;\n        });\n        const firstAnimation = animations[0];\n        const callback = (finished) => {\n            if (finished) {\n                // we want to call the callback after every single animation\n                // not after all of them\n                return;\n            }\n            // this is going to be called only if sequence has been cancelled\n            animations.forEach((animation) => {\n                if (typeof animation.callback === 'function' && !animation.finished) {\n                    animation.callback(finished);\n                }\n            });\n        };\n        function sequence(animation, now) {\n            const currentAnim = animations[animation.animationIndex];\n            const finished = currentAnim.onFrame(currentAnim, now);\n            animation.current = currentAnim.current;\n            if (finished) {\n                // we want to call the callback after every single animation\n                if (currentAnim.callback) {\n                    currentAnim.callback(true /* finished */);\n                }\n                currentAnim.finished = true;\n                animation.animationIndex += 1;\n                if (animation.animationIndex < animations.length) {\n                    const nextAnim = animations[animation.animationIndex];\n                    nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n                    return false;\n                }\n                return true;\n            }\n            return false;\n        }\n        function onStart(animation, value, now, previousAnimation) {\n            animation.animationIndex = 0;\n            if (previousAnimation === undefined) {\n                previousAnimation = animations[animations.length - 1];\n            }\n            firstAnimation.onStart(firstAnimation, value, now, previousAnimation);\n        }\n        return {\n            isHigherOrder: true,\n            onFrame: sequence,\n            onStart,\n            animationIndex: 0,\n            current: firstAnimation.current,\n            callback,\n        };\n    });\n}\n/**\n * @deprecated Kept for backward compatibility. Will be removed soon.\n */\nexport function sequence(..._animations) {\n    'worklet';\n    console.warn('Method `sequence` is deprecated. Please use `withSequence` instead');\n    return withSequence(..._animations);\n}\n"],"mappings":"AAAA,SAASA,eAAe;AACxB,OAAO,SAASC,YAAYA,CAAA,EAAiB;EACzC,SAAS;;EAAC,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADkBC,WAAW,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAXF,WAAW,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAEvC,OAAOP,eAAe,CAACK,WAAW,CAAC,CAAC,CAAC,EAAE,YAAM;IACzC,SAAS;;IACT,IAAMG,UAAU,GAAGH,WAAW,CAACI,GAAG,CAAC,UAACC,CAAC,EAAK;MACtC,IAAMC,MAAM,GAAG,OAAOD,CAAC,KAAK,UAAU,GAAGA,CAAC,EAAE,GAAGA,CAAC;MAChDC,MAAM,CAACC,QAAQ,GAAG,KAAK;MACvB,OAAOD,MAAM;IACjB,CAAC,CAAC;IACF,IAAME,cAAc,GAAGL,UAAU,CAAC,CAAC,CAAC;IACpC,IAAMM,QAAQ,GAAG,SAAXA,QAAQA,CAAIF,QAAQ,EAAK;MAC3B,IAAIA,QAAQ,EAAE;QAGV;MACJ;MAEAJ,UAAU,CAACO,OAAO,CAAC,UAACC,SAAS,EAAK;QAC9B,IAAI,OAAOA,SAAS,CAACF,QAAQ,KAAK,UAAU,IAAI,CAACE,SAAS,CAACJ,QAAQ,EAAE;UACjEI,SAAS,CAACF,QAAQ,CAACF,QAAQ,CAAC;QAChC;MACJ,CAAC,CAAC;IACN,CAAC;IACD,SAASK,QAAQA,CAACD,SAAS,EAAEE,GAAG,EAAE;MAC9B,IAAMC,WAAW,GAAGX,UAAU,CAACQ,SAAS,CAACI,cAAc,CAAC;MACxD,IAAMR,QAAQ,GAAGO,WAAW,CAACE,OAAO,CAACF,WAAW,EAAED,GAAG,CAAC;MACtDF,SAAS,CAACM,OAAO,GAAGH,WAAW,CAACG,OAAO;MACvC,IAAIV,QAAQ,EAAE;QAEV,IAAIO,WAAW,CAACL,QAAQ,EAAE;UACtBK,WAAW,CAACL,QAAQ,CAAC,IAAI,CAAgB;QAC7C;QACAK,WAAW,CAACP,QAAQ,GAAG,IAAI;QAC3BI,SAAS,CAACI,cAAc,IAAI,CAAC;QAC7B,IAAIJ,SAAS,CAACI,cAAc,GAAGZ,UAAU,CAACJ,MAAM,EAAE;UAC9C,IAAMmB,QAAQ,GAAGf,UAAU,CAACQ,SAAS,CAACI,cAAc,CAAC;UACrDG,QAAQ,CAACC,OAAO,CAACD,QAAQ,EAAEJ,WAAW,CAACG,OAAO,EAAEJ,GAAG,EAAEC,WAAW,CAAC;UACjE,OAAO,KAAK;QAChB;QACA,OAAO,IAAI;MACf;MACA,OAAO,KAAK;IAChB;IACA,SAASK,OAAOA,CAACR,SAAS,EAAES,KAAK,EAAEP,GAAG,EAAEQ,iBAAiB,EAAE;MACvDV,SAAS,CAACI,cAAc,GAAG,CAAC;MAC5B,IAAIM,iBAAiB,KAAKC,SAAS,EAAE;QACjCD,iBAAiB,GAAGlB,UAAU,CAACA,UAAU,CAACJ,MAAM,GAAG,CAAC,CAAC;MACzD;MACAS,cAAc,CAACW,OAAO,CAACX,cAAc,EAAEY,KAAK,EAAEP,GAAG,EAAEQ,iBAAiB,CAAC;IACzE;IACA,OAAO;MACHE,aAAa,EAAE,IAAI;MACnBP,OAAO,EAAEJ,QAAQ;MACjBO,OAAO,EAAPA,OAAO;MACPJ,cAAc,EAAE,CAAC;MACjBE,OAAO,EAAET,cAAc,CAACS,OAAO;MAC/BR,QAAQ,EAARA;IACJ,CAAC;EACL,CAAC,CAAC;AACN;AAIA,OAAO,SAASG,QAAQA,CAAA,EAAiB;EACrC,SAAS;;EACTY,OAAO,CAACC,IAAI,CAAC,oEAAoE,CAAC;EAClF,OAAO7B,YAAY,CAAA8B,KAAA,SAAA5B,SAAA,CAAgB;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}