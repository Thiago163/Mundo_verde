{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport axios from \"axios\";\nimport styles from \"./estilo\";\nimport styleGeral from \"../estiloGeral/style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TLogin() {\n  var navigation = useNavigation();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    login = _useState2[0],\n    setLogin = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    senha = _useState4[0],\n    setSenha = _useState4[1];\n  function navegar(rota) {\n    navigation.navigate(rota);\n  }\n  function esqueci() {\n    navigation.navigate('tEsqueciSenha');\n  }\n  function criar() {\n    navigation.navigate('tSelecaoUser');\n  }\n  useEffect(function () {\n    verificarLogin();\n  }, []);\n  function verificarLogin() {\n    return _verificarLogin.apply(this, arguments);\n  }\n  function _verificarLogin() {\n    _verificarLogin = _asyncToGenerator(function* () {\n      var usuarioLogado = false;\n      if (usuarioLogado) {\n        navegar(\"Routes2\");\n      }\n    });\n    return _verificarLogin.apply(this, arguments);\n  }\n  function handleLogin() {\n    return _handleLogin.apply(this, arguments);\n  }\n  function _handleLogin() {\n    _handleLogin = _asyncToGenerator(function* () {\n      var formData = new URLSearchParams();\n      formData.append('login', login);\n      formData.append('senha', senha);\n      try {\n        var response = yield axios.post('URL_DO_SEU_SERVIDOR', formData);\n        console.log(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return _handleLogin.apply(this, arguments);\n  }\n  return _jsxs(ImageBackground, {\n    style: styleGeral.container,\n    children: [_jsx(View, {\n      style: styles.main,\n      children: _jsx(Image, {\n        style: {\n          width: 250,\n          height: 100,\n          marginTop: 200,\n          marginLeft: 30\n        },\n        source: require(\"../../assets/logo.png\")\n      })\n    }), _jsxs(View, {\n      style: styles.footer,\n      children: [_jsx(TextInput, {\n        style: styleGeral.input,\n        placeholder: \"Digite seu email ou CPF\",\n        onChangeText: setLogin\n      }), _jsx(TextInput, {\n        style: styleGeral.input,\n        placeholder: \"Digite sua senha\",\n        value: senha,\n        secureTextEntry: true,\n        onChangeText: setSenha\n      }), _jsxs(TouchableOpacity, {\n        style: styleGeral.button,\n        onPress: handleLogin,\n        children: [\" \", _jsx(Text, {\n          style: styleGeral.buttonText,\n          children: \"Entrar\"\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.main,\n      children: [_jsxs(Text, {\n        style: styles.title,\n        children: [\"Esqueceu sua senha?\", _jsx(TouchableOpacity, {\n          onPress: esqueci,\n          children: _jsx(Text, {\n            style: styles.hyperlinkStyle,\n            children: \" Clique aqui\"\n          })\n        })]\n      }), _jsxs(Text, {\n        style: styles.title,\n        children: [\"N\\xE3o possui uma conta?\", _jsx(TouchableOpacity, {\n          onPress: criar,\n          children: _jsx(Text, {\n            style: styles.hyperlinkStyle,\n            children: \" Clique aqui\"\n          })\n        })]\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","View","Image","ImageBackground","Text","TextInput","TouchableOpacity","useNavigation","axios","styles","styleGeral","jsx","_jsx","jsxs","_jsxs","TLogin","navigation","_useState","_useState2","_slicedToArray","login","setLogin","_useState3","_useState4","senha","setSenha","navegar","rota","navigate","esqueci","criar","verificarLogin","_verificarLogin","apply","arguments","_asyncToGenerator","usuarioLogado","handleLogin","_handleLogin","formData","URLSearchParams","append","response","post","console","log","data","error","style","container","children","main","width","height","marginTop","marginLeft","source","require","footer","input","placeholder","onChangeText","value","secureTextEntry","button","onPress","buttonText","title","hyperlinkStyle"],"sources":["C:/Users/ggina/OneDrive/Área de Trabalho/APLICATIVO_MUNDO_VERDE-main/src/pages/tLogin/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, Image, ImageBackground, Text, TextInput, TouchableOpacity } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport axios from \"axios\";\n\nimport styles from './estilo';\nimport styleGeral from '../estiloGeral/style';\n// Remover import desnecessário\n// import \"../../AuthContext\";\n\nexport default function TLogin() { // Corrigido para começar com letra maiúscula\n    const navigation = useNavigation();\n\n    const [login, setLogin] = useState(\"\");\n    const [senha, setSenha] = useState(\"\");\n\n    function navegar(rota) {\n        navigation.navigate(rota);\n    }\n\n    function esqueci() {\n        navigation.navigate('tEsqueciSenha');\n    }\n\n    function criar() {\n        navigation.navigate('tSelecaoUser');\n    }\n\n    useEffect(() => {\n        verificarLogin();\n    }, []); // Adicionado array de dependências vazio para evitar loop infinito\n\n    async function verificarLogin() {\n        // Aqui você deve definir a função ChecarLoginUsuario() se não estiver importada\n        // const usuarioLogado = await ChecarLoginUsuario();\n        const usuarioLogado = false; // Temporário, substitua com a lógica real\n\n        if (usuarioLogado) {\n            navegar(\"Routes2\");\n        }\n    }\n\n    async function handleLogin() { // Renomeado para evitar conflito de nomes\n        const formData = new URLSearchParams();\n        formData.append('login', login);\n        formData.append('senha', senha);\n\n        try {\n            const response = await axios.post('URL_DO_SEU_SERVIDOR', formData); // Substitua 'URL_DO_SEU_SERVIDOR' pela URL real\n            console.log(response.data);\n            // Adicione a lógica para o que deve acontecer após o login bem-sucedido\n        } catch (error) {\n            console.error(error);\n            // Adicione tratamento de erro\n        }\n    }\n\n    return (\n        <ImageBackground style={styleGeral.container}>\n            <View style={styles.main}>\n                <Image\n                    style={{ width: 250, height: 100, marginTop: 200, marginLeft: 30 }}\n                    source={require('../../assets/logo.png')}\n                />\n            </View>\n\n            <View style={styles.footer}>\n                <TextInput\n                    style={styleGeral.input}\n                    placeholder=\"Digite seu email ou CPF\"\n                    onChangeText={setLogin} // Simplificado\n                />\n                <TextInput\n                    style={styleGeral.input}\n                    placeholder=\"Digite sua senha\"\n                    value={senha}\n                    secureTextEntry={true}\n                    onChangeText={setSenha} // Simplificado\n                />\n\n                <TouchableOpacity style={styleGeral.button} onPress={handleLogin}> {/* Alterado para handleLogin */}\n                    <Text style={styleGeral.buttonText}>Entrar</Text>\n                </TouchableOpacity>\n            </View>\n\n            <View style={styles.main}>\n                <Text style={styles.title}>Esqueceu sua senha?\n                    <TouchableOpacity onPress={esqueci}>\n                        <Text style={styles.hyperlinkStyle}> Clique aqui</Text>\n                    </TouchableOpacity>\n                </Text>\n\n                <Text style={styles.title}>Não possui uma conta?\n                    <TouchableOpacity onPress={criar}>\n                        <Text style={styles.hyperlinkStyle}> Clique aqui</Text>\n                    </TouchableOpacity>\n                </Text>\n            </View>\n        </ImageBackground>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}