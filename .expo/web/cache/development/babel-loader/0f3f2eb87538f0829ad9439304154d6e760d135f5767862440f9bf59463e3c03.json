{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport * as SplashScreen from 'expo-splash-screen';\nimport React from 'react';\nvar AppLoading = function (_React$Component) {\n  _inherits(AppLoading, _React$Component);\n  var _super = _createSuper(AppLoading);\n  function AppLoading(props) {\n    var _this;\n    _classCallCheck(this, AppLoading);\n    _this = _super.call(this, props);\n    SplashScreen.preventAutoHideAsync();\n    return _this;\n  }\n  _createClass(AppLoading, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.autoHideSplash === false) {\n        return;\n      }\n      if (global.__E2E__) {\n        SplashScreen.hideAsync();\n      } else {\n        setTimeout(SplashScreen.hideAsync, 200);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n  return AppLoading;\n}(React.Component);\nAppLoading.defaultProps = {\n  autoHideSplash: true\n};\nexport { AppLoading as default };","map":{"version":3,"names":["SplashScreen","React","AppLoading","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","preventAutoHideAsync","_createClass","key","value","componentWillUnmount","autoHideSplash","global","__E2E__","hideAsync","setTimeout","render","Component","defaultProps","default"],"sources":["D:\\home\\aluno\\Desktop\\App_Cuidadores12\\node_modules\\expo-app-loading\\src\\AppLoadingNativeWrapper.tsx"],"sourcesContent":["import * as SplashScreen from 'expo-splash-screen';\nimport React from 'react';\n\ntype Props = {\n  autoHideSplash?: boolean;\n};\n\nexport default class AppLoading extends React.Component<Props> {\n  static defaultProps = {\n    autoHideSplash: true,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    SplashScreen.preventAutoHideAsync();\n  }\n\n  componentWillUnmount() {\n    if (this.props.autoHideSplash === false) {\n      return;\n    }\n    // @ts-ignore\n    if (global.__E2E__) {\n      // Hide immediately in E2E tests\n      SplashScreen.hideAsync();\n    } else {\n      setTimeout(SplashScreen.hideAsync, 200);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,YAAY,MAAM,oBAAoB;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,IAMLC,UAAW,aAAAC,gBAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EAK9B,SAAAA,WAAYK,KAAY;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,UAAA;IACtBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,KAAK;IACXP,YAAY,CAACW,oBAAoB,EAAE;IAAC,OAAAH,KAAA;EACtC;EAACI,YAAA,CAAAV,UAAA;IAAAW,GAAA;IAAAC,KAAA,EAED,SAAAC,qBAAA,EAAoB;MAClB,IAAI,IAAI,CAACR,KAAK,CAACS,cAAc,KAAK,KAAK,EAAE;QACvC;;MAGF,IAAIC,MAAM,CAACC,OAAO,EAAE;QAElBlB,YAAY,CAACmB,SAAS,EAAE;OACzB,MAAM;QACLC,UAAU,CAACpB,YAAY,CAACmB,SAAS,EAAE,GAAG,CAAC;;IAE3C;EAAC;IAAAN,GAAA;IAAAC,KAAA,EAED,SAAAO,OAAA,EAAM;MACJ,OAAO,IAAI;IACb;EAAC;EAAA,OAAAnB,UAAA;AAAA,EAzBqCD,KAAK,CAACqB,SAAgB;AAAzCpB,UAAW,CACvBqB,YAAY,GAAG;EACpBP,cAAc,EAAE;CACjB;AAAA,SAHkBd,UAAW,IAAAsB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}