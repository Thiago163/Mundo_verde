{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction CardUsuario(_ref) {\n  var usuario = _ref.usuario;\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    favorito = _useState2[0],\n    setFavorito = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    classificacao = _useState4[0],\n    setClassificacao = _useState4[1];\n  var abrirDetalhes = function abrirDetalhes() {\n    navigation.navigate('tDetalhes', {\n      usuario: usuario\n    });\n  };\n  var enviarParaBancoDeDados = function enviarParaBancoDeDados(method) {\n    var cuidadorId = usuario.id;\n    var usuarioId = 1;\n    var url = 'https://localhost:44396/api/favoritosusu';\n    var requestOptions = {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        usuario_id: usuarioId,\n        cuidador_id: cuidadorId\n      })\n    };\n    if (method === 'DELETE') {\n      fetch(\"https://localhost:44396/api/favoritosusu\", requestOptions).then(function (response) {\n        if (response.ok) {\n          console.log('Dados excluídos com sucesso da API');\n        } else {\n          throw new Error('Erro ao excluir os dados da API');\n        }\n      }).catch(function (error) {\n        console.log(error);\n        alert('Erro ao excluir informações');\n      });\n    } else {\n      fetch(url, requestOptions).then(function (response) {\n        if (response.ok) {\n          console.log('Dados enviados com sucesso para a API');\n        } else {\n          throw new Error('Erro ao enviar os dados para a API');\n        }\n      }).catch(function (error) {\n        console.log(error);\n        alert('Erro ao inserir informações');\n      });\n    }\n  };\n  var handleToggleFavorito = function handleToggleFavorito() {\n    setFavorito(function (prevFavorito) {\n      return !prevFavorito;\n    });\n    if (favorito) {\n      enviarParaBancoDeDados('DELETE');\n    } else {\n      enviarParaBancoDeDados('POST');\n    }\n  };\n  var renderEstrelas = function renderEstrelas() {\n    return [1, 2, 3, 4, 5].map(function (index) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setClassificacao(index);\n        },\n        style: styles.estrela,\n        children: _jsx(Icon, {\n          name: index <= classificacao ? 'star' : 'star-o',\n          size: 18,\n          color: \"gold\"\n        })\n      }, index);\n    });\n  };\n  return _jsxs(TouchableOpacity, {\n    style: styles.cardContainer,\n    onPress: abrirDetalhes,\n    children: [_jsx(Image, {\n      source: {\n        uri: usuario.imagem\n      },\n      style: styles.image,\n      resizeMode: \"cover\"\n    }), _jsxs(View, {\n      style: styles.infoContainer,\n      children: [_jsx(Text, {\n        style: styles.nameText,\n        children: usuario.nome\n      }), _jsx(View, {\n        style: styles.tipo,\n        children: _jsx(Text, {\n          style: styles.tipoText,\n          children: usuario.tipo\n        })\n      }), _jsx(View, {\n        style: styles.classificacaoContainer,\n        children: renderEstrelas()\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.favoritoContainer,\n      onPress: handleToggleFavorito,\n      children: _jsx(Icon, {\n        name: favorito ? 'heart' : 'heart-o',\n        size: 18,\n        color: favorito ? 'red' : 'black'\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  cardContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  image: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    marginRight: 10\n  },\n  infoContainer: {\n    flex: 1\n  },\n  nameText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  tipo: {\n    backgroundColor: '#ddd',\n    borderRadius: 5,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    marginBottom: 5\n  },\n  tipoText: {\n    fontSize: 12\n  },\n  classificacaoContainer: {\n    flexDirection: 'row'\n  },\n  estrela: {\n    marginRight: 2\n  },\n  favoritoContainer: {\n    padding: 10\n  }\n});\nexport default CardUsuario;","map":{"version":3,"names":["React","useState","View","StyleSheet","Image","TouchableOpacity","Text","useNavigation","Icon","jsx","_jsx","jsxs","_jsxs","CardUsuario","_ref","usuario","navigation","_useState","_useState2","_slicedToArray","favorito","setFavorito","_useState3","_useState4","classificacao","setClassificacao","abrirDetalhes","navigate","enviarParaBancoDeDados","method","cuidadorId","id","usuarioId","url","requestOptions","headers","body","JSON","stringify","usuario_id","cuidador_id","fetch","then","response","ok","console","log","Error","catch","error","alert","handleToggleFavorito","prevFavorito","renderEstrelas","map","index","onPress","style","styles","estrela","children","name","size","color","cardContainer","source","uri","imagem","image","resizeMode","infoContainer","nameText","nome","tipo","tipoText","classificacaoContainer","favoritoContainer","create","flexDirection","alignItems","padding","borderBottomWidth","borderBottomColor","width","height","borderRadius","marginRight","flex","fontSize","fontWeight","marginBottom","backgroundColor","paddingHorizontal","paddingVertical"],"sources":["C:/Users/luizf/Desktop/App_Cuidadores2/src/components/CardUsuario/CardUsuario.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, Image, TouchableOpacity, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nfunction CardUsuario({ usuario }) {\r\n  const navigation = useNavigation();\r\n  const [favorito, setFavorito] = useState(false);\r\n  const [classificacao, setClassificacao] = useState(0);\r\n\r\n  const abrirDetalhes = () => {\r\n    navigation.navigate('tDetalhes', { usuario });\r\n  };\r\n\r\n  const enviarParaBancoDeDados = (method) => {\r\n    const cuidadorId = usuario.id; // ID do cuidador\r\n    const usuarioId = 1; // ID do usuário do aplicativo (você pode substituir pelo valor correto)\r\n    const url = 'https://localhost:44396/api/favoritosusu';\r\n\r\n    const requestOptions = {\r\n      method: method,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        usuario_id: usuarioId,\r\n        cuidador_id: cuidadorId,\r\n      }),\r\n    };\r\n\r\n    if (method === 'DELETE') {\r\n      // Adicione o ID do favorito na URL de exclusão\r\n      fetch(`https://localhost:44396/api/favoritosusu`, requestOptions)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            // Sucesso ao excluir os dados da API\r\n            console.log('Dados excluídos com sucesso da API');\r\n          } else {\r\n            // Erro ao excluir os dados da API\r\n            throw new Error('Erro ao excluir os dados da API');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert('Erro ao excluir informações');\r\n        });\r\n    } else {\r\n      fetch(url, requestOptions)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            // Sucesso ao enviar os dados para a API\r\n            console.log('Dados enviados com sucesso para a API');\r\n          } else {\r\n            // Erro ao enviar os dados para a API\r\n            throw new Error('Erro ao enviar os dados para a API');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          alert('Erro ao inserir informações');\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleToggleFavorito = () => {\r\n    setFavorito((prevFavorito) => !prevFavorito);\r\n\r\n    if (favorito) {\r\n      enviarParaBancoDeDados('DELETE');\r\n    } else {\r\n      enviarParaBancoDeDados('POST');\r\n    }\r\n  };\r\n\r\n  const renderEstrelas = () => {\r\n    return [1, 2, 3, 4, 5].map((index) => (\r\n      <TouchableOpacity\r\n        key={index}\r\n        onPress={() => setClassificacao(index)}\r\n        style={styles.estrela}\r\n      >\r\n        <Icon\r\n          name={index <= classificacao ? 'star' : 'star-o'}\r\n          size={18}\r\n          color=\"gold\"\r\n        />\r\n      </TouchableOpacity>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity style={styles.cardContainer} onPress={abrirDetalhes}>\r\n      <Image\r\n        source={{ uri: usuario.imagem }}\r\n        style={styles.image}\r\n        resizeMode=\"cover\"\r\n      />\r\n      <View style={styles.infoContainer}>\r\n        <Text style={styles.nameText}>{usuario.nome}</Text>\r\n        <View style={styles.tipo}>\r\n          <Text style={styles.tipoText}>{usuario.tipo}</Text>\r\n        </View>\r\n        <View style={styles.classificacaoContainer}>{renderEstrelas()}</View>\r\n      </View>\r\n      <TouchableOpacity\r\n        style={styles.favoritoContainer}\r\n        onPress={handleToggleFavorito}\r\n      >\r\n        <Icon\r\n          name={favorito ? 'heart' : 'heart-o'}\r\n          size={18}\r\n          color={favorito ? 'red' : 'black'}\r\n        />\r\n      </TouchableOpacity>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  cardContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  image: {\r\n    width: 80,\r\n    height: 80,\r\n    borderRadius: 40,\r\n    marginRight: 10,\r\n  },\r\n  infoContainer: {\r\n    flex: 1,\r\n  },\r\n  nameText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  tipo: {\r\n    backgroundColor: '#ddd',\r\n    borderRadius: 5,\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 4,\r\n    marginBottom: 5,\r\n  },\r\n  tipoText: {\r\n    fontSize: 12,\r\n  },\r\n  classificacaoContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  estrela: {\r\n    marginRight: 2,\r\n  },\r\n  favoritoContainer: {\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default CardUsuario;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}