{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport times from 'lodash/times';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar STAR_IMAGE = require(\"./images/star.png\");\nvar HEART_IMAGE = require(\"./images/heart.png\");\nvar ROCKET_IMAGE = require(\"./images/rocket.png\");\nvar BELL_IMAGE = require(\"./images/bell.png\");\nvar TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\nvar SwipeRating = function (_Component) {\n  _inherits(SwipeRating, _Component);\n  var _super = _createSuper(SwipeRating);\n  function SwipeRating(props) {\n    var _this;\n    _classCallCheck(this, SwipeRating);\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n      onStartRating = _this$props.onStartRating,\n      onSwipeRating = _this$props.onSwipeRating,\n      onFinishRating = _this$props.onFinishRating,\n      fractions = _this$props.fractions;\n    var position = new Animated.ValueXY();\n    var panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onPanResponderGrant: function onPanResponderGrant(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        var tapPositionX = gesture.x0 - _this.state.centerX + gesture.dx;\n        newPosition.setValue({\n          x: tapPositionX,\n          y: 0\n        });\n        if (_this.state.isComponentMounted) {\n          _this.setState({\n            position: newPosition,\n            value: tapPositionX\n          });\n          var rating = _this.getCurrentRating(tapPositionX);\n          if (typeof onStartRating === 'function') {\n            onStartRating(rating);\n          }\n        }\n      },\n      onPanResponderMove: function onPanResponderMove(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        var tapPositionX = gesture.x0 - _this.state.centerX + gesture.dx;\n        newPosition.setValue({\n          x: tapPositionX,\n          y: 0\n        });\n        if (_this.state.isComponentMounted) {\n          _this.setState({\n            position: newPosition,\n            value: tapPositionX\n          });\n          var rating = _this.getCurrentRating(tapPositionX);\n          if (typeof onSwipeRating === \"function\") {\n            onSwipeRating(rating);\n          }\n        }\n      },\n      onPanResponderRelease: function onPanResponderRelease() {\n        var rating = _this.getCurrentRating(_this.state.value);\n        if (rating >= _this.props.minValue) {\n          if (!fractions) {\n            _this.setCurrentRating(rating);\n          }\n          if (typeof onFinishRating === 'function') {\n            onFinishRating(rating);\n          }\n        }\n      }\n    });\n    _this.state = {\n      panResponder: panResponder,\n      position: position,\n      display: false,\n      isComponentMounted: false\n    };\n    return _this;\n  }\n  _createClass(SwipeRating, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      try {\n        this.setState({\n          display: true,\n          isComponentMounted: true\n        }, function () {\n          return _this2.setCurrentRating(_this2.props.startingValue);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.startingValue !== prevProps.startingValue) {\n        this.setCurrentRating(this.props.startingValue);\n      }\n    }\n  }, {\n    key: \"handleLayoutChange\",\n    value: function handleLayoutChange() {\n      var _this3 = this;\n      this.ratingRef.measure(function (fx, fy, width, height, px) {\n        var halfWidth = width / 2;\n        var pageXWithinWindow = px % Dimensions.get(\"window\").width;\n        _this3.setState({\n          centerX: pageXWithinWindow + halfWidth\n        });\n      });\n    }\n  }, {\n    key: \"getPrimaryViewStyle\",\n    value: function getPrimaryViewStyle() {\n      var position = this.state.position;\n      var _this$props2 = this.props,\n        imageSize = _this$props2.imageSize,\n        ratingCount = _this$props2.ratingCount,\n        type = _this$props2.type;\n      var color = TYPES[type].color;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: color,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"getSecondaryViewStyle\",\n    value: function getSecondaryViewStyle() {\n      var position = this.state.position;\n      var _this$props3 = this.props,\n        imageSize = _this$props3.imageSize,\n        ratingCount = _this$props3.ratingCount,\n        type = _this$props3.type;\n      var backgroundColor = TYPES[type].backgroundColor;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: backgroundColor,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"renderRatings\",\n    value: function renderRatings() {\n      var _this$props4 = this.props,\n        imageSize = _this$props4.imageSize,\n        ratingCount = _this$props4.ratingCount,\n        type = _this$props4.type,\n        tintColor = _this$props4.tintColor;\n      var source = TYPES[type].source;\n      return times(ratingCount, function (index) {\n        return _jsx(View, {\n          style: styles.starContainer,\n          children: _jsx(Image, {\n            source: source,\n            style: {\n              width: imageSize,\n              height: imageSize,\n              tintColor: tintColor\n            }\n          })\n        }, index);\n      });\n    }\n  }, {\n    key: \"getCurrentRating\",\n    value: function getCurrentRating(value) {\n      var _this$props5 = this.props,\n        fractions = _this$props5.fractions,\n        imageSize = _this$props5.imageSize,\n        ratingCount = _this$props5.ratingCount;\n      var startingValue = ratingCount / 2;\n      var currentRating = this.props.minValue ? this.props.minValue : 0;\n      if (value > ratingCount * imageSize / 2) {\n        currentRating = ratingCount;\n      } else if (value < -ratingCount * imageSize / 2) {\n        currentRating = this.props.minValue ? this.props.minValue : 0;\n      } else if (value <= imageSize || value > imageSize) {\n        var diff = value / imageSize;\n        currentRating = startingValue + diff;\n        currentRating = fractions ? Number(currentRating.toFixed(fractions)) : Math.ceil(currentRating);\n      } else {\n        currentRating = fractions ? Number(startingValue.toFixed(fractions)) : Math.ceil(startingValue);\n      }\n      if (this.props.jumpValue > 0 && this.props.jumpValue < this.props.ratingCount) {\n        return Math.ceil(currentRating * (1 / this.props.jumpValue)) / (1 / this.props.jumpValue);\n      } else {\n        return currentRating;\n      }\n    }\n  }, {\n    key: \"setCurrentRating\",\n    value: function setCurrentRating(rating) {\n      var _this$props6 = this.props,\n        imageSize = _this$props6.imageSize,\n        ratingCount = _this$props6.ratingCount;\n      var initialRating = ratingCount / 2;\n      var value = null;\n      if (rating > ratingCount) {\n        value = ratingCount * imageSize / 2;\n      } else if (rating < 0) {\n        value = -ratingCount * imageSize / 2;\n      } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n        value = (rating - initialRating) * imageSize;\n      } else {\n        value = 0;\n      }\n      var newPosition = new Animated.ValueXY();\n      newPosition.setValue({\n        x: value,\n        y: 0\n      });\n      if (this.state.isComponentMounted) {\n        this.setState({\n          position: newPosition,\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"displayCurrentRating\",\n    value: function displayCurrentRating() {\n      var _this$props7 = this.props,\n        ratingCount = _this$props7.ratingCount,\n        type = _this$props7.type,\n        readonly = _this$props7.readonly,\n        showReadOnlyText = _this$props7.showReadOnlyText,\n        ratingTextColor = _this$props7.ratingTextColor;\n      var color = ratingTextColor || TYPES[type].color;\n      return _jsxs(View, {\n        style: styles.showRatingView,\n        children: [_jsxs(View, {\n          style: styles.ratingView,\n          children: [_jsxs(Text, {\n            style: [styles.ratingText, {\n              color: color\n            }],\n            children: [\"Rating:\", ' ']\n          }), _jsx(Text, {\n            style: [styles.currentRatingText, {\n              color: color\n            }],\n            children: this.getCurrentRating(this.state.value)\n          }), _jsxs(Text, {\n            style: [styles.maxRatingText, {\n              color: color\n            }],\n            children: [\"/\", ratingCount]\n          })]\n        }), _jsx(View, {\n          children: readonly && showReadOnlyText && _jsx(Text, {\n            style: [styles.readonlyLabel, {\n              color: color\n            }],\n            children: \"(readonly)\"\n          })\n        })]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      var _this$props8 = this.props,\n        readonly = _this$props8.readonly,\n        type = _this$props8.type,\n        ratingImage = _this$props8.ratingImage,\n        ratingColor = _this$props8.ratingColor,\n        ratingBackgroundColor = _this$props8.ratingBackgroundColor,\n        style = _this$props8.style,\n        showRating = _this$props8.showRating;\n      if (type === 'custom') {\n        var custom = {\n          source: ratingImage,\n          color: ratingColor,\n          backgroundColor: ratingBackgroundColor\n        };\n        TYPES.custom = custom;\n      }\n      return this.state.display ? _jsxs(View, {\n        pointerEvents: readonly ? 'none' : 'auto',\n        style: style,\n        children: [showRating && this.displayCurrentRating(), _jsxs(View, _objectSpread(_objectSpread({\n          style: styles.starsWrapper\n        }, this.state.panResponder.panHandlers), {}, {\n          children: [_jsxs(View, {\n            style: styles.starsInsideWrapper,\n            onLayout: function onLayout(e) {\n              _this4.handleLayoutChange(e);\n            },\n            ref: function ref(view) {\n              _this4.ratingRef = view;\n            },\n            children: [_jsx(Animated.View, {\n              style: this.getPrimaryViewStyle()\n            }), _jsx(Animated.View, {\n              style: this.getSecondaryViewStyle()\n            })]\n          }), this.renderRatings()]\n        }))]\n      }) : null;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        isComponentMounted: false\n      });\n    }\n  }]);\n  return SwipeRating;\n}(Component);\nSwipeRating.defaultProps = {\n  type: 'star',\n  ratingImage: STAR_IMAGE,\n  ratingColor: '#f1c40f',\n  ratingBackgroundColor: 'white',\n  ratingCount: 5,\n  showReadOnlyText: true,\n  imageSize: 40,\n  minValue: 0,\n  jumpValue: 0\n};\nexport { SwipeRating as default };\nvar styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\nvar fractionsType = function fractionsType(props, propName, componentName) {\n  if (props[propName]) {\n    var value = props[propName];\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20 ? null : new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be between 0 and 20\");\n    }\n    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be a number\");\n  }\n};\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: PropTypes.node,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: PropTypes.object,\n  readonly: PropTypes.bool,\n  showReadOnlyText: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};","map":{"version":3,"names":["React","Component","times","PropTypes","View","Text","Animated","PanResponder","Image","StyleSheet","Platform","Dimensions","jsx","_jsx","jsxs","_jsxs","STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","TYPES","star","source","color","backgroundColor","heart","rocket","bell","SwipeRating","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_this$props","onStartRating","onSwipeRating","onFinishRating","fractions","position","ValueXY","panResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","event","gesture","newPosition","tapPositionX","x0","state","centerX","dx","setValue","x","y","isComponentMounted","setState","value","rating","getCurrentRating","onPanResponderMove","onPanResponderRelease","minValue","setCurrentRating","display","_createClass","key","componentDidMount","_this2","startingValue","err","console","log","componentDidUpdate","prevProps","handleLayoutChange","_this3","ratingRef","measure","fx","fy","width","height","px","halfWidth","pageXWithinWindow","get","getPrimaryViewStyle","_this$props2","imageSize","ratingCount","type","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","getSecondaryViewStyle","_this$props3","renderRatings","_this$props4","tintColor","index","style","styles","starContainer","children","_this$props5","currentRating","diff","Number","toFixed","Math","ceil","jumpValue","_this$props6","initialRating","displayCurrentRating","_this$props7","readonly","showReadOnlyText","ratingTextColor","showRatingView","ratingView","ratingText","currentRatingText","maxRatingText","readonlyLabel","render","_this4","_this$props8","ratingImage","ratingColor","ratingBackgroundColor","showRating","custom","pointerEvents","_objectSpread","starsWrapper","panHandlers","starsInsideWrapper","onLayout","e","ref","view","componentWillUnmount","defaultProps","default","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily","OS","fractionsType","propName","componentName","Error","propTypes","string","node","number","func","bool","object"],"sources":["C:/Users/luizf/OneDrive/Área de Trabalho/App_Cuidadores/node_modules/react-native-ratings/src/SwipeRating.js"],"sourcesContent":["import React, { Component } from 'react';\nimport times from 'lodash/times';\nimport PropTypes from 'prop-types';\n\nimport {\n  View, Text, Animated, PanResponder, Image,\n  StyleSheet, Platform, Dimensions\n} from 'react-native';\n\n// RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\nconst STAR_IMAGE = require( './images/star.png' );\nconst HEART_IMAGE = require( './images/heart.png' );\nconst ROCKET_IMAGE = require( './images/rocket.png' );\nconst BELL_IMAGE = require( './images/bell.png' );\n\nconst TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\n\nexport default class SwipeRating extends Component {\n  static defaultProps = {\n    type: 'star',\n    ratingImage: STAR_IMAGE,\n    ratingColor: '#f1c40f',\n    ratingBackgroundColor: 'white',\n    ratingCount: 5,\n    showReadOnlyText: true,\n    imageSize: 40,\n    minValue: 0,\n    jumpValue: 0\n  };\n\n  constructor( props ) {\n    super( props );\n    const { onStartRating, onSwipeRating, onFinishRating, fractions } = this.props;\n    const position = new Animated.ValueXY();\n\n    const panResponder = PanResponder.create( {\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: ( event, gesture ) => {\n        const newPosition = new Animated.ValueXY();\n        const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n\n        newPosition.setValue( { x: tapPositionX, y: 0 } );\n        if ( this.state.isComponentMounted ) {\n          this.setState( { position: newPosition, value: tapPositionX } );\n          const rating = this.getCurrentRating( tapPositionX );\n\n          if ( typeof onStartRating === 'function' ) {\n            onStartRating( rating );\n          }\n        }\n      },\n      onPanResponderMove: ( event, gesture ) => {\n        const newPosition = new Animated.ValueXY();\n        const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n\n        newPosition.setValue( { x: tapPositionX, y: 0 } );\n        if ( this.state.isComponentMounted ) {\n          this.setState( { position: newPosition, value: tapPositionX } );\n          const rating = this.getCurrentRating( tapPositionX );\n\n          if ( typeof onSwipeRating === \"function\" ) {\n            onSwipeRating( rating );\n          }\n        }\n      },\n      onPanResponderRelease: () => {\n        const rating = this.getCurrentRating( this.state.value );\n\n        if ( rating >= this.props.minValue ) {\n          if ( !fractions ) {\n            // 'round up' to the nearest rating image\n            this.setCurrentRating( rating );\n          }\n          if ( typeof onFinishRating === 'function' ) {\n            onFinishRating( rating );\n          }\n        }\n      }\n    } );\n\n    this.state = { panResponder, position, display: false, isComponentMounted: false };\n  }\n\n componentDidMount() {\n    try {\n      this.setState(\n        { display: true, isComponentMounted: true },\n        () => this.setCurrentRating( this.props.startingValue )\n      );\n    } catch ( err ) {\n      // eslint-disable-next-line no-console\n      console.log( err )\n    }\n\n  }\n\n  componentDidUpdate( prevProps ) {\n    if ( this.props.startingValue !== prevProps.startingValue ) {\n      this.setCurrentRating( this.props.startingValue );\n    }\n  }\n\n  handleLayoutChange() {\n    // eslint-disable-next-line max-params\n    this.ratingRef.measure( ( fx, fy, width, height, px ) => {\n      const halfWidth = width / 2\n      const pageXWithinWindow = px % Dimensions.get( \"window\" ).width\n\n      this.setState( {\n        centerX: pageXWithinWindow + halfWidth\n      } );\n    } );\n  }\n\n  getPrimaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const {color} = TYPES[type];\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * ( imageSize / 2 ), 0, ratingCount * ( imageSize / 2 )],\n        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor: color,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  getSecondaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const {backgroundColor} = TYPES[type];\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * ( imageSize / 2 ), 0, ratingCount * ( imageSize / 2 )],\n        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  renderRatings() {\n    const { imageSize, ratingCount, type, tintColor } = this.props;\n    const {source} = TYPES[type];\n\n    return times( ratingCount, index =>\n      <View key={index} style={styles.starContainer}>\n        <Image source={source} style={{ width: imageSize, height: imageSize, tintColor }} />\n      </View>\n    );\n  }\n\n  // eslint-disable-next-line max-statements\n  getCurrentRating( value ) {\n    const { fractions, imageSize, ratingCount } = this.props;\n\n    const startingValue = ratingCount / 2;\n\n    let currentRating = this.props.minValue ? this.props.minValue : 0;\n\n    if ( value > ratingCount * imageSize / 2 ) {\n      currentRating = ratingCount;\n    } else if ( value < -ratingCount * imageSize / 2 ) {\n      currentRating = this.props.minValue ? this.props.minValue : 0;\n    } else if ( value <= imageSize || value > imageSize ) {\n      const diff = value / imageSize\n\n      currentRating = startingValue + diff;\n      currentRating = fractions ? Number( currentRating.toFixed( fractions ) ) : Math.ceil( currentRating );\n    } else {\n      currentRating = fractions ? Number( startingValue.toFixed( fractions ) ) : Math.ceil( startingValue );\n    }\n    if (\n      this.props.jumpValue > 0 &&\n      this.props.jumpValue < this.props.ratingCount\n    ) {\n      return (\n        Math.ceil( currentRating * ( 1 / this.props.jumpValue ) ) /\n        ( 1 / this.props.jumpValue )\n      );\n    } else {\n      return currentRating;\n    }\n  }\n\n  // eslint-disable-next-line max-statements\n  setCurrentRating( rating ) {\n    const { imageSize, ratingCount } = this.props;\n\n    // `initialRating` corresponds to `startingValue` in the getter. Naming it\n    // Differently here avoids confusion with `value` below.\n    const initialRating = ratingCount / 2;\n\n    let value = null;\n\n    if ( rating > ratingCount ) {\n      value = ratingCount * imageSize / 2;\n    } else if ( rating < 0 ) {\n      value = -ratingCount * imageSize / 2;\n    } else if ( rating < ratingCount / 2 || rating > ratingCount / 2 ) {\n      value = ( rating - initialRating ) * imageSize;\n    } else {\n      value = 0;\n    }\n\n    const newPosition = new Animated.ValueXY();\n\n    newPosition.setValue( { x: value, y: 0 } );\n    if ( this.state.isComponentMounted ) {\n      this.setState( {position: newPosition, value} );\n    }\n  }\n\n  displayCurrentRating() {\n    const { ratingCount, type, readonly, showReadOnlyText, ratingTextColor } = this.props;\n    const color = ratingTextColor || TYPES[type].color;\n\n    return (\n      <View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={[styles.ratingText, { color }]}>Rating:{' '}</Text>\n          <Text style={[styles.currentRatingText, { color }]}>{this.getCurrentRating( this.state.value )}</Text>\n          <Text style={[styles.maxRatingText, { color }]}>/{ratingCount}</Text>\n        </View>\n        <View>{readonly && showReadOnlyText && <Text style={[styles.readonlyLabel, { color }]}>(readonly)</Text>}</View>\n      </View>\n    );\n  }\n\n  render() {\n    const { readonly, type, ratingImage, ratingColor, ratingBackgroundColor, style, showRating } = this.props;\n\n    if ( type === 'custom' ) {\n      const custom = {\n        source: ratingImage,\n        color: ratingColor,\n        backgroundColor: ratingBackgroundColor\n      };\n\n      TYPES.custom = custom;\n    }\n\n    return (\n      this.state.display ?\n      <View pointerEvents={readonly ? 'none' : 'auto'} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View style={styles.starsWrapper} {...this.state.panResponder.panHandlers}>\n            <View style={styles.starsInsideWrapper} onLayout={e => {\n              this.handleLayoutChange( e )\n            }} ref={view => {\n              this.ratingRef = view;\n            }}>\n            <Animated.View style={this.getPrimaryViewStyle()} />\n            <Animated.View style={this.getSecondaryViewStyle()} />\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View> :\n      null\n    );\n  }\n\n  componentWillUnmount() {\n    this.setState( { isComponentMounted: false } );\n  }\n\n}\n\nconst styles = StyleSheet.create( {\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n} );\n\nconst fractionsType = ( props, propName, componentName ) => {\n  if ( props[propName] ) {\n    const value = props[propName];\n\n    if ( typeof value === 'number' ) {\n      return value >= 0 && value <= 20 ?\n        null :\n        new Error( `\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20` );\n    }\n\n    return new Error( `\\`${propName}\\` in \\`${componentName}\\` must be a number` );\n  }\n};\n\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: PropTypes.node,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: PropTypes.object,\n  readonly: PropTypes.bool,\n  showReadOnlyText: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,SAAS,MAAM,YAAY;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAQnC,IAAMC,UAAU,GAAGC,OAAO,qBAAuB;AACjD,IAAMC,WAAW,GAAGD,OAAO,sBAAwB;AACnD,IAAME,YAAY,GAAGF,OAAO,uBAAyB;AACrD,IAAMG,UAAU,GAAGH,OAAO,qBAAuB;AAEjD,IAAMI,KAAK,GAAG;EACZC,IAAI,EAAE;IACJC,MAAM,EAAEP,UAAU;IAClBQ,KAAK,EAAE,SAAS;IAChBC,eAAe,EAAE;EACnB,CAAC;EACDC,KAAK,EAAE;IACLH,MAAM,EAAEL,WAAW;IACnBM,KAAK,EAAE,SAAS;IAChBC,eAAe,EAAE;EACnB,CAAC;EACDE,MAAM,EAAE;IACNJ,MAAM,EAAEJ,YAAY;IACpBK,KAAK,EAAE,SAAS;IAChBC,eAAe,EAAE;EACnB,CAAC;EACDG,IAAI,EAAE;IACJL,MAAM,EAAEH,UAAU;IAClBI,KAAK,EAAE,SAAS;IAChBC,eAAe,EAAE;EACnB;AACF,CAAC;AAAC,IAEmBI,WAAW,aAAAC,UAAA;EAAAC,SAAA,CAAAF,WAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,WAAA;EAa9B,SAAAA,YAAaK,KAAK,EAAG;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,WAAA;IACnBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAOH,KAAK;IACZ,IAAAI,WAAA,GAAoEH,KAAA,CAAKD,KAAK;MAAtEK,aAAa,GAAAD,WAAA,CAAbC,aAAa;MAAEC,aAAa,GAAAF,WAAA,CAAbE,aAAa;MAAEC,cAAc,GAAAH,WAAA,CAAdG,cAAc;MAAEC,SAAS,GAAAJ,WAAA,CAATI,SAAS;IAC/D,IAAMC,QAAQ,GAAG,IAAIrC,QAAQ,CAACsC,OAAO,EAAE;IAEvC,IAAMC,YAAY,GAAGtC,YAAY,CAACuC,MAAM,CAAE;MACxCC,4BAA4B,EAAE,SAAAA,6BAAA;QAAA,OAAM,IAAI;MAAA;MACxCC,mBAAmB,EAAE,SAAAA,oBAAEC,KAAK,EAAEC,OAAO,EAAM;QACzC,IAAMC,WAAW,GAAG,IAAI7C,QAAQ,CAACsC,OAAO,EAAE;QAC1C,IAAMQ,YAAY,GAAGF,OAAO,CAACG,EAAE,GAAGlB,KAAA,CAAKmB,KAAK,CAACC,OAAO,GAAGL,OAAO,CAACM,EAAE;QAEjEL,WAAW,CAACM,QAAQ,CAAE;UAAEC,CAAC,EAAEN,YAAY;UAAEO,CAAC,EAAE;QAAE,CAAC,CAAE;QACjD,IAAKxB,KAAA,CAAKmB,KAAK,CAACM,kBAAkB,EAAG;UACnCzB,KAAA,CAAK0B,QAAQ,CAAE;YAAElB,QAAQ,EAAEQ,WAAW;YAAEW,KAAK,EAAEV;UAAa,CAAC,CAAE;UAC/D,IAAMW,MAAM,GAAG5B,KAAA,CAAK6B,gBAAgB,CAAEZ,YAAY,CAAE;UAEpD,IAAK,OAAOb,aAAa,KAAK,UAAU,EAAG;YACzCA,aAAa,CAAEwB,MAAM,CAAE;UACzB;QACF;MACF,CAAC;MACDE,kBAAkB,EAAE,SAAAA,mBAAEhB,KAAK,EAAEC,OAAO,EAAM;QACxC,IAAMC,WAAW,GAAG,IAAI7C,QAAQ,CAACsC,OAAO,EAAE;QAC1C,IAAMQ,YAAY,GAAGF,OAAO,CAACG,EAAE,GAAGlB,KAAA,CAAKmB,KAAK,CAACC,OAAO,GAAGL,OAAO,CAACM,EAAE;QAEjEL,WAAW,CAACM,QAAQ,CAAE;UAAEC,CAAC,EAAEN,YAAY;UAAEO,CAAC,EAAE;QAAE,CAAC,CAAE;QACjD,IAAKxB,KAAA,CAAKmB,KAAK,CAACM,kBAAkB,EAAG;UACnCzB,KAAA,CAAK0B,QAAQ,CAAE;YAAElB,QAAQ,EAAEQ,WAAW;YAAEW,KAAK,EAAEV;UAAa,CAAC,CAAE;UAC/D,IAAMW,MAAM,GAAG5B,KAAA,CAAK6B,gBAAgB,CAAEZ,YAAY,CAAE;UAEpD,IAAK,OAAOZ,aAAa,KAAK,UAAU,EAAG;YACzCA,aAAa,CAAEuB,MAAM,CAAE;UACzB;QACF;MACF,CAAC;MACDG,qBAAqB,EAAE,SAAAA,sBAAA,EAAM;QAC3B,IAAMH,MAAM,GAAG5B,KAAA,CAAK6B,gBAAgB,CAAE7B,KAAA,CAAKmB,KAAK,CAACQ,KAAK,CAAE;QAExD,IAAKC,MAAM,IAAI5B,KAAA,CAAKD,KAAK,CAACiC,QAAQ,EAAG;UACnC,IAAK,CAACzB,SAAS,EAAG;YAEhBP,KAAA,CAAKiC,gBAAgB,CAAEL,MAAM,CAAE;UACjC;UACA,IAAK,OAAOtB,cAAc,KAAK,UAAU,EAAG;YAC1CA,cAAc,CAAEsB,MAAM,CAAE;UAC1B;QACF;MACF;IACF,CAAC,CAAE;IAEH5B,KAAA,CAAKmB,KAAK,GAAG;MAAET,YAAY,EAAZA,YAAY;MAAEF,QAAQ,EAARA,QAAQ;MAAE0B,OAAO,EAAE,KAAK;MAAET,kBAAkB,EAAE;IAAM,CAAC;IAAC,OAAAzB,KAAA;EACrF;EAACmC,YAAA,CAAAzC,WAAA;IAAA0C,GAAA;IAAAT,KAAA,EAEF,SAAAU,kBAAA,EAAoB;MAAA,IAAAC,MAAA;MACjB,IAAI;QACF,IAAI,CAACZ,QAAQ,CACX;UAAEQ,OAAO,EAAE,IAAI;UAAET,kBAAkB,EAAE;QAAK,CAAC,EAC3C;UAAA,OAAMa,MAAI,CAACL,gBAAgB,CAAEK,MAAI,CAACvC,KAAK,CAACwC,aAAa,CAAE;QAAA,EACxD;MACH,CAAC,CAAC,OAAQC,GAAG,EAAG;QAEdC,OAAO,CAACC,GAAG,CAAEF,GAAG,CAAE;MACpB;IAEF;EAAC;IAAAJ,GAAA;IAAAT,KAAA,EAED,SAAAgB,mBAAoBC,SAAS,EAAG;MAC9B,IAAK,IAAI,CAAC7C,KAAK,CAACwC,aAAa,KAAKK,SAAS,CAACL,aAAa,EAAG;QAC1D,IAAI,CAACN,gBAAgB,CAAE,IAAI,CAAClC,KAAK,CAACwC,aAAa,CAAE;MACnD;IACF;EAAC;IAAAH,GAAA;IAAAT,KAAA,EAED,SAAAkB,mBAAA,EAAqB;MAAA,IAAAC,MAAA;MAEnB,IAAI,CAACC,SAAS,CAACC,OAAO,CAAE,UAAEC,EAAE,EAAEC,EAAE,EAAEC,KAAK,EAAEC,MAAM,EAAEC,EAAE,EAAM;QACvD,IAAMC,SAAS,GAAGH,KAAK,GAAG,CAAC;QAC3B,IAAMI,iBAAiB,GAAGF,EAAE,GAAG7E,UAAU,CAACgF,GAAG,CAAE,QAAQ,CAAE,CAACL,KAAK;QAE/DL,MAAI,CAACpB,QAAQ,CAAE;UACbN,OAAO,EAAEmC,iBAAiB,GAAGD;QAC/B,CAAC,CAAE;MACL,CAAC,CAAE;IACL;EAAC;IAAAlB,GAAA;IAAAT,KAAA,EAED,SAAA8B,oBAAA,EAAsB;MACpB,IAAQjD,QAAQ,GAAK,IAAI,CAACW,KAAK,CAAvBX,QAAQ;MAChB,IAAAkD,YAAA,GAAyC,IAAI,CAAC3D,KAAK;QAA3C4D,SAAS,GAAAD,YAAA,CAATC,SAAS;QAAEC,WAAW,GAAAF,YAAA,CAAXE,WAAW;QAAEC,IAAI,GAAAH,YAAA,CAAJG,IAAI;MAEpC,IAAOxE,KAAK,GAAIH,KAAK,CAAC2E,IAAI,CAAC,CAApBxE,KAAK;MAEZ,IAAM8D,KAAK,GAAG3C,QAAQ,CAACe,CAAC,CAACuC,WAAW,CAClC;QACEC,UAAU,EAAE,CAAC,CAACH,WAAW,IAAKD,SAAS,GAAG,CAAC,CAAE,EAAE,CAAC,EAAEC,WAAW,IAAKD,SAAS,GAAG,CAAC,CAAE,CAAC;QAClFK,WAAW,EAAE,CAAC,CAAC,EAAEJ,WAAW,GAAGD,SAAS,GAAG,CAAC,EAAEC,WAAW,GAAGD,SAAS,CAAC;QACtEM,WAAW,EAAE;MACf,CAAC,EACD;QACEC,eAAe,EAAE;MACnB,CAAC,CACF;MAED,OAAO;QACL5E,eAAe,EAAED,KAAK;QACtB8D,KAAK,EAALA,KAAK;QACLC,MAAM,EAAED,KAAK,GAAGQ,SAAS,GAAG;MAC9B,CAAC;IACH;EAAC;IAAAvB,GAAA;IAAAT,KAAA,EAED,SAAAwC,sBAAA,EAAwB;MACtB,IAAQ3D,QAAQ,GAAK,IAAI,CAACW,KAAK,CAAvBX,QAAQ;MAChB,IAAA4D,YAAA,GAAyC,IAAI,CAACrE,KAAK;QAA3C4D,SAAS,GAAAS,YAAA,CAATT,SAAS;QAAEC,WAAW,GAAAQ,YAAA,CAAXR,WAAW;QAAEC,IAAI,GAAAO,YAAA,CAAJP,IAAI;MAEpC,IAAOvE,eAAe,GAAIJ,KAAK,CAAC2E,IAAI,CAAC,CAA9BvE,eAAe;MAEtB,IAAM6D,KAAK,GAAG3C,QAAQ,CAACe,CAAC,CAACuC,WAAW,CAClC;QACEC,UAAU,EAAE,CAAC,CAACH,WAAW,IAAKD,SAAS,GAAG,CAAC,CAAE,EAAE,CAAC,EAAEC,WAAW,IAAKD,SAAS,GAAG,CAAC,CAAE,CAAC;QAClFK,WAAW,EAAE,CAACJ,WAAW,GAAGD,SAAS,EAAEC,WAAW,GAAGD,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC;QACtEM,WAAW,EAAE;MACf,CAAC,EACD;QACEC,eAAe,EAAE;MACnB,CAAC,CACF;MAED,OAAO;QACL5E,eAAe,EAAfA,eAAe;QACf6D,KAAK,EAALA,KAAK;QACLC,MAAM,EAAED,KAAK,GAAGQ,SAAS,GAAG;MAC9B,CAAC;IACH;EAAC;IAAAvB,GAAA;IAAAT,KAAA,EAED,SAAA0C,cAAA,EAAgB;MACd,IAAAC,YAAA,GAAoD,IAAI,CAACvE,KAAK;QAAtD4D,SAAS,GAAAW,YAAA,CAATX,SAAS;QAAEC,WAAW,GAAAU,YAAA,CAAXV,WAAW;QAAEC,IAAI,GAAAS,YAAA,CAAJT,IAAI;QAAEU,SAAS,GAAAD,YAAA,CAATC,SAAS;MAC/C,IAAOnF,MAAM,GAAIF,KAAK,CAAC2E,IAAI,CAAC,CAArBzE,MAAM;MAEb,OAAOrB,KAAK,CAAE6F,WAAW,EAAE,UAAAY,KAAK;QAAA,OAC9B9F,IAAA,CAACT,IAAI;UAAawG,KAAK,EAAEC,MAAM,CAACC,aAAc;UAAAC,QAAA,EAC5ClG,IAAA,CAACL,KAAK;YAACe,MAAM,EAAEA,MAAO;YAACqF,KAAK,EAAE;cAAEtB,KAAK,EAAEQ,SAAS;cAAEP,MAAM,EAAEO,SAAS;cAAEY,SAAS,EAATA;YAAU;UAAE;QAAG,GAD3EC,KAAK,CAET;MAAA,EACR;IACH;EAAC;IAAApC,GAAA;IAAAT,KAAA,EAGD,SAAAE,iBAAkBF,KAAK,EAAG;MACxB,IAAAkD,YAAA,GAA8C,IAAI,CAAC9E,KAAK;QAAhDQ,SAAS,GAAAsE,YAAA,CAATtE,SAAS;QAAEoD,SAAS,GAAAkB,YAAA,CAATlB,SAAS;QAAEC,WAAW,GAAAiB,YAAA,CAAXjB,WAAW;MAEzC,IAAMrB,aAAa,GAAGqB,WAAW,GAAG,CAAC;MAErC,IAAIkB,aAAa,GAAG,IAAI,CAAC/E,KAAK,CAACiC,QAAQ,GAAG,IAAI,CAACjC,KAAK,CAACiC,QAAQ,GAAG,CAAC;MAEjE,IAAKL,KAAK,GAAGiC,WAAW,GAAGD,SAAS,GAAG,CAAC,EAAG;QACzCmB,aAAa,GAAGlB,WAAW;MAC7B,CAAC,MAAM,IAAKjC,KAAK,GAAG,CAACiC,WAAW,GAAGD,SAAS,GAAG,CAAC,EAAG;QACjDmB,aAAa,GAAG,IAAI,CAAC/E,KAAK,CAACiC,QAAQ,GAAG,IAAI,CAACjC,KAAK,CAACiC,QAAQ,GAAG,CAAC;MAC/D,CAAC,MAAM,IAAKL,KAAK,IAAIgC,SAAS,IAAIhC,KAAK,GAAGgC,SAAS,EAAG;QACpD,IAAMoB,IAAI,GAAGpD,KAAK,GAAGgC,SAAS;QAE9BmB,aAAa,GAAGvC,aAAa,GAAGwC,IAAI;QACpCD,aAAa,GAAGvE,SAAS,GAAGyE,MAAM,CAAEF,aAAa,CAACG,OAAO,CAAE1E,SAAS,CAAE,CAAE,GAAG2E,IAAI,CAACC,IAAI,CAAEL,aAAa,CAAE;MACvG,CAAC,MAAM;QACLA,aAAa,GAAGvE,SAAS,GAAGyE,MAAM,CAAEzC,aAAa,CAAC0C,OAAO,CAAE1E,SAAS,CAAE,CAAE,GAAG2E,IAAI,CAACC,IAAI,CAAE5C,aAAa,CAAE;MACvG;MACA,IACE,IAAI,CAACxC,KAAK,CAACqF,SAAS,GAAG,CAAC,IACxB,IAAI,CAACrF,KAAK,CAACqF,SAAS,GAAG,IAAI,CAACrF,KAAK,CAAC6D,WAAW,EAC7C;QACA,OACEsB,IAAI,CAACC,IAAI,CAAEL,aAAa,IAAK,CAAC,GAAG,IAAI,CAAC/E,KAAK,CAACqF,SAAS,CAAE,CAAE,IACvD,CAAC,GAAG,IAAI,CAACrF,KAAK,CAACqF,SAAS,CAAE;MAEhC,CAAC,MAAM;QACL,OAAON,aAAa;MACtB;IACF;EAAC;IAAA1C,GAAA;IAAAT,KAAA,EAGD,SAAAM,iBAAkBL,MAAM,EAAG;MACzB,IAAAyD,YAAA,GAAmC,IAAI,CAACtF,KAAK;QAArC4D,SAAS,GAAA0B,YAAA,CAAT1B,SAAS;QAAEC,WAAW,GAAAyB,YAAA,CAAXzB,WAAW;MAI9B,IAAM0B,aAAa,GAAG1B,WAAW,GAAG,CAAC;MAErC,IAAIjC,KAAK,GAAG,IAAI;MAEhB,IAAKC,MAAM,GAAGgC,WAAW,EAAG;QAC1BjC,KAAK,GAAGiC,WAAW,GAAGD,SAAS,GAAG,CAAC;MACrC,CAAC,MAAM,IAAK/B,MAAM,GAAG,CAAC,EAAG;QACvBD,KAAK,GAAG,CAACiC,WAAW,GAAGD,SAAS,GAAG,CAAC;MACtC,CAAC,MAAM,IAAK/B,MAAM,GAAGgC,WAAW,GAAG,CAAC,IAAIhC,MAAM,GAAGgC,WAAW,GAAG,CAAC,EAAG;QACjEjC,KAAK,GAAG,CAAEC,MAAM,GAAG0D,aAAa,IAAK3B,SAAS;MAChD,CAAC,MAAM;QACLhC,KAAK,GAAG,CAAC;MACX;MAEA,IAAMX,WAAW,GAAG,IAAI7C,QAAQ,CAACsC,OAAO,EAAE;MAE1CO,WAAW,CAACM,QAAQ,CAAE;QAAEC,CAAC,EAAEI,KAAK;QAAEH,CAAC,EAAE;MAAE,CAAC,CAAE;MAC1C,IAAK,IAAI,CAACL,KAAK,CAACM,kBAAkB,EAAG;QACnC,IAAI,CAACC,QAAQ,CAAE;UAAClB,QAAQ,EAAEQ,WAAW;UAAEW,KAAK,EAALA;QAAK,CAAC,CAAE;MACjD;IACF;EAAC;IAAAS,GAAA;IAAAT,KAAA,EAED,SAAA4D,qBAAA,EAAuB;MACrB,IAAAC,YAAA,GAA2E,IAAI,CAACzF,KAAK;QAA7E6D,WAAW,GAAA4B,YAAA,CAAX5B,WAAW;QAAEC,IAAI,GAAA2B,YAAA,CAAJ3B,IAAI;QAAE4B,QAAQ,GAAAD,YAAA,CAARC,QAAQ;QAAEC,gBAAgB,GAAAF,YAAA,CAAhBE,gBAAgB;QAAEC,eAAe,GAAAH,YAAA,CAAfG,eAAe;MACtE,IAAMtG,KAAK,GAAGsG,eAAe,IAAIzG,KAAK,CAAC2E,IAAI,CAAC,CAACxE,KAAK;MAElD,OACET,KAAA,CAACX,IAAI;QAACwG,KAAK,EAAEC,MAAM,CAACkB,cAAe;QAAAhB,QAAA,GACjChG,KAAA,CAACX,IAAI;UAACwG,KAAK,EAAEC,MAAM,CAACmB,UAAW;UAAAjB,QAAA,GAC7BhG,KAAA,CAACV,IAAI;YAACuG,KAAK,EAAE,CAACC,MAAM,CAACoB,UAAU,EAAE;cAAEzG,KAAK,EAALA;YAAM,CAAC,CAAE;YAAAuF,QAAA,GAAC,SAAO,EAAC,GAAG;UAAA,EAAQ,EAChElG,IAAA,CAACR,IAAI;YAACuG,KAAK,EAAE,CAACC,MAAM,CAACqB,iBAAiB,EAAE;cAAE1G,KAAK,EAALA;YAAM,CAAC,CAAE;YAAAuF,QAAA,EAAE,IAAI,CAAC/C,gBAAgB,CAAE,IAAI,CAACV,KAAK,CAACQ,KAAK;UAAE,EAAQ,EACtG/C,KAAA,CAACV,IAAI;YAACuG,KAAK,EAAE,CAACC,MAAM,CAACsB,aAAa,EAAE;cAAE3G,KAAK,EAALA;YAAM,CAAC,CAAE;YAAAuF,QAAA,GAAC,GAAC,EAAChB,WAAW;UAAA,EAAQ;QAAA,EAChE,EACPlF,IAAA,CAACT,IAAI;UAAA2G,QAAA,EAAEa,QAAQ,IAAIC,gBAAgB,IAAIhH,IAAA,CAACR,IAAI;YAACuG,KAAK,EAAE,CAACC,MAAM,CAACuB,aAAa,EAAE;cAAE5G,KAAK,EAALA;YAAM,CAAC,CAAE;YAAAuF,QAAA,EAAC;UAAU;QAAO,EAAQ;MAAA,EAC3G;IAEX;EAAC;IAAAxC,GAAA;IAAAT,KAAA,EAED,SAAAuE,OAAA,EAAS;MAAA,IAAAC,MAAA;MACP,IAAAC,YAAA,GAA+F,IAAI,CAACrG,KAAK;QAAjG0F,QAAQ,GAAAW,YAAA,CAARX,QAAQ;QAAE5B,IAAI,GAAAuC,YAAA,CAAJvC,IAAI;QAAEwC,WAAW,GAAAD,YAAA,CAAXC,WAAW;QAAEC,WAAW,GAAAF,YAAA,CAAXE,WAAW;QAAEC,qBAAqB,GAAAH,YAAA,CAArBG,qBAAqB;QAAE9B,KAAK,GAAA2B,YAAA,CAAL3B,KAAK;QAAE+B,UAAU,GAAAJ,YAAA,CAAVI,UAAU;MAE1F,IAAK3C,IAAI,KAAK,QAAQ,EAAG;QACvB,IAAM4C,MAAM,GAAG;UACbrH,MAAM,EAAEiH,WAAW;UACnBhH,KAAK,EAAEiH,WAAW;UAClBhH,eAAe,EAAEiH;QACnB,CAAC;QAEDrH,KAAK,CAACuH,MAAM,GAAGA,MAAM;MACvB;MAEA,OACE,IAAI,CAACtF,KAAK,CAACe,OAAO,GAClBtD,KAAA,CAACX,IAAI;QAACyI,aAAa,EAAEjB,QAAQ,GAAG,MAAM,GAAG,MAAO;QAAChB,KAAK,EAAEA,KAAM;QAAAG,QAAA,GAC3D4B,UAAU,IAAI,IAAI,CAACjB,oBAAoB,EAAE,EAC1C3G,KAAA,CAACX,IAAI,EAAA0I,aAAA,CAAAA,aAAA;UAAClC,KAAK,EAAEC,MAAM,CAACkC;QAAa,GAAK,IAAI,CAACzF,KAAK,CAACT,YAAY,CAACmG,WAAW;UAAAjC,QAAA,GACrEhG,KAAA,CAACX,IAAI;YAACwG,KAAK,EAAEC,MAAM,CAACoC,kBAAmB;YAACC,QAAQ,EAAE,SAAAA,SAAAC,CAAC,EAAI;cACrDb,MAAI,CAACtD,kBAAkB,CAAEmE,CAAC,CAAE;YAC9B,CAAE;YAACC,GAAG,EAAE,SAAAA,IAAAC,IAAI,EAAI;cACdf,MAAI,CAACpD,SAAS,GAAGmE,IAAI;YACvB,CAAE;YAAAtC,QAAA,GACFlG,IAAA,CAACP,QAAQ,CAACF,IAAI;cAACwG,KAAK,EAAE,IAAI,CAAChB,mBAAmB;YAAG,EAAG,EACpD/E,IAAA,CAACP,QAAQ,CAACF,IAAI;cAACwG,KAAK,EAAE,IAAI,CAACN,qBAAqB;YAAG,EAAG;UAAA,EACjD,EACN,IAAI,CAACE,aAAa,EAAE;QAAA,GAChB;MAAA,EACF,GACP,IAAI;IAER;EAAC;IAAAjC,GAAA;IAAAT,KAAA,EAED,SAAAwF,qBAAA,EAAuB;MACrB,IAAI,CAACzF,QAAQ,CAAE;QAAED,kBAAkB,EAAE;MAAM,CAAC,CAAE;IAChD;EAAC;EAAA,OAAA/B,WAAA;AAAA,EA5QsC5B,SAAS;AAA7B4B,WAAW,CACvB0H,YAAY,GAAG;EACpBvD,IAAI,EAAE,MAAM;EACZwC,WAAW,EAAExH,UAAU;EACvByH,WAAW,EAAE,SAAS;EACtBC,qBAAqB,EAAE,OAAO;EAC9B3C,WAAW,EAAE,CAAC;EACd8B,gBAAgB,EAAE,IAAI;EACtB/B,SAAS,EAAE,EAAE;EACb3B,QAAQ,EAAE,CAAC;EACXoD,SAAS,EAAE;AACb,CAAC;AAAA,SAXkB1F,WAAW,IAAA2H,OAAA;AAgRhC,IAAM3C,MAAM,GAAGpG,UAAU,CAACqC,MAAM,CAAE;EAChCiG,YAAY,EAAE;IACZU,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDV,kBAAkB,EAAE;IAClBtG,QAAQ,EAAE,UAAU;IACpBiH,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTN,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACD5B,cAAc,EAAE;IACd0B,aAAa,EAAE,QAAQ;IACvBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBK,aAAa,EAAE;EACjB,CAAC;EACDhC,UAAU,EAAE;IACVyB,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBK,aAAa,EAAE;EACjB,CAAC;EACD/B,UAAU,EAAE;IACVgC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAEzJ,QAAQ,CAAC0J,EAAE,KAAK,KAAK,GAAG,cAAc,GAAG,IAAI;IACzD5I,KAAK,EAAE;EACT,CAAC;EACD4G,aAAa,EAAE;IACbsB,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBM,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAEzJ,QAAQ,CAAC0J,EAAE,KAAK,KAAK,GAAG,cAAc,GAAG,IAAI;IACzD5I,KAAK,EAAE;EACT,CAAC;EACD0G,iBAAiB,EAAE;IACjB+B,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAEzJ,QAAQ,CAAC0J,EAAE,KAAK,KAAK,GAAG,cAAc,GAAG;EACvD,CAAC;EACDjC,aAAa,EAAE;IACb8B,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAEzJ,QAAQ,CAAC0J,EAAE,KAAK,KAAK,GAAG,cAAc,GAAG,IAAI;IACzD5I,KAAK,EAAE;EACT;AACF,CAAC,CAAE;AAEH,IAAM6I,aAAa,GAAG,SAAhBA,aAAaA,CAAKnI,KAAK,EAAEoI,QAAQ,EAAEC,aAAa,EAAM;EAC1D,IAAKrI,KAAK,CAACoI,QAAQ,CAAC,EAAG;IACrB,IAAMxG,KAAK,GAAG5B,KAAK,CAACoI,QAAQ,CAAC;IAE7B,IAAK,OAAOxG,KAAK,KAAK,QAAQ,EAAG;MAC/B,OAAOA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,EAAE,GAC9B,IAAI,GACJ,IAAI0G,KAAK,OAAOF,QAAQ,cAAWC,aAAa,gCAA+B;IACnF;IAEA,OAAO,IAAIC,KAAK,OAAOF,QAAQ,cAAWC,aAAa,wBAAuB;EAChF;AACF,CAAC;AAED1I,WAAW,CAAC4I,SAAS,GAAG;EACtBzE,IAAI,EAAE7F,SAAS,CAACuK,MAAM;EACtBlC,WAAW,EAAErI,SAAS,CAACwK,IAAI;EAC3BlC,WAAW,EAAEtI,SAAS,CAACuK,MAAM;EAC7BhC,qBAAqB,EAAEvI,SAAS,CAACuK,MAAM;EACvC3E,WAAW,EAAE5F,SAAS,CAACyK,MAAM;EAC7B9C,eAAe,EAAE3H,SAAS,CAACuK,MAAM;EACjC5E,SAAS,EAAE3F,SAAS,CAACyK,MAAM;EAC3BrI,aAAa,EAAEpC,SAAS,CAAC0K,IAAI;EAC7BpI,cAAc,EAAEtC,SAAS,CAAC0K,IAAI;EAC9BlC,UAAU,EAAExI,SAAS,CAAC2K,IAAI;EAC1BlE,KAAK,EAAEzG,SAAS,CAAC4K,MAAM;EACvBnD,QAAQ,EAAEzH,SAAS,CAAC2K,IAAI;EACxBjD,gBAAgB,EAAE1H,SAAS,CAAC2K,IAAI;EAChCpG,aAAa,EAAEvE,SAAS,CAACyK,MAAM;EAC/BlI,SAAS,EAAE2H,aAAa;EACxBlG,QAAQ,EAAEhE,SAAS,CAACyK;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}