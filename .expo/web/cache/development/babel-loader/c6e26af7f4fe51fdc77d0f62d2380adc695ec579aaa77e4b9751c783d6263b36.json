{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"updateTheme\", \"replaceTheme\", \"onClear\"];\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport color from 'color';\nimport renderNode from \"./renderNode\";\nimport getIconType from \"./getIconType\";\nimport normalizeText from \"./normalizeText\";\nimport nodeType from \"./nodeType\";\nimport { ImageSourceType } from \"./types\";\nvar Screen = Dimensions.get('window');\nvar ScreenWidth = Screen.width;\nvar ScreenHeight = Screen.height;\nvar isIOS = Platform.OS === 'ios';\nvar conditionalStyle = function conditionalStyle(condition, style) {\n  return condition ? style : {};\n};\nexport var patchWebProps = function patchWebProps(_ref) {\n  var updateTheme = _ref.updateTheme,\n    replaceTheme = _ref.replaceTheme,\n    onClear = _ref.onClear,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return rest;\n};\nexport { renderNode, getIconType, normalizeText, nodeType, ScreenWidth, ScreenHeight, isIOS, conditionalStyle, color, ImageSourceType };","map":{"version":3,"names":["color","renderNode","getIconType","normalizeText","nodeType","ImageSourceType","Screen","Dimensions","get","ScreenWidth","width","ScreenHeight","height","isIOS","Platform","OS","conditionalStyle","condition","style","patchWebProps","_ref","updateTheme","replaceTheme","onClear","rest","_objectWithoutProperties","_excluded"],"sources":["D:/home/aluno/Desktop/App_Cuidadores/node_modules/react-native-elements/src/helpers/index.js"],"sourcesContent":["import { Platform, Dimensions } from 'react-native';\nimport color from 'color';\nimport renderNode from './renderNode';\nimport getIconType from './getIconType';\nimport normalizeText from './normalizeText';\nimport nodeType from './nodeType';\nimport { ImageSourceType } from './types';\n\nconst Screen = Dimensions.get('window');\nconst ScreenWidth = Screen.width;\nconst ScreenHeight = Screen.height;\nconst isIOS = Platform.OS === 'ios';\n\nconst conditionalStyle = (condition, style) => (condition ? style : {});\n\nexport const patchWebProps = ({\n  updateTheme,\n  replaceTheme,\n  onClear,\n  ...rest\n}) => {\n  return rest;\n};\n\nexport {\n  renderNode,\n  getIconType,\n  normalizeText,\n  nodeType,\n  ScreenWidth,\n  ScreenHeight,\n  isIOS,\n  conditionalStyle,\n  color,\n  ImageSourceType,\n};\n"],"mappings":";;;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU;AACjB,OAAOC,WAAW;AAClB,OAAOC,aAAa;AACpB,OAAOC,QAAQ;AACf,SAASC,eAAe;AAExB,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;AACvC,IAAMC,WAAW,GAAGH,MAAM,CAACI,KAAK;AAChC,IAAMC,YAAY,GAAGL,MAAM,CAACM,MAAM;AAClC,IAAMC,KAAK,GAAGC,QAAQ,CAACC,EAAE,KAAK,KAAK;AAEnC,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,SAAS,EAAEC,KAAK;EAAA,OAAMD,SAAS,GAAGC,KAAK,GAAG,CAAC,CAAC;AAAA,CAAC;AAEvE,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAKpB;EAAA,IAJJC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IACXC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IACZC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IACJC,IAAI,GAAAC,wBAAA,CAAAL,IAAA,EAAAM,SAAA;EAEP,OAAOF,IAAI;AACb,CAAC;AAED,SACEvB,UAAU,EACVC,WAAW,EACXC,aAAa,EACbC,QAAQ,EACRK,WAAW,EACXE,YAAY,EACZE,KAAK,EACLG,gBAAgB,EAChBhB,KAAK,EACLK,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}